[{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jl5000.github.io/gedcomS7/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jl5000.github.io/gedcomS7/articles/1_intro_to_gedcom.html","id":"what-is-gedcom","dir":"Articles","previous_headings":"","what":"What is GEDCOM?","title":"Introduction to GEDCOM","text":"Genealogical Data Communication (GEDCOM) specification storing exchanging genealogical data. created Church Jesus Christ Latter-day Saints 1984, become de-facto standard used worldwide. current version 7.0 version supported gedcomS7.","code":""},{"path":"https://jl5000.github.io/gedcomS7/articles/1_intro_to_gedcom.html","id":"what-does-a-gedcom-file-look-like","dir":"Articles","previous_headings":"","what":"What does a GEDCOM file look like?","title":"Introduction to GEDCOM","text":"GEDCOM file plain text file (extension .ged), contains records. records contain information : Families Individuals Multimedia Sources Repositories Notes Submitters also two special records appear beginning end file; header trailer. sample file looks like : record nested structure containing one lines. Lines GEDCOM file can number components: Level: level hierarchical structure. appears every line. New records begin level 0; Cross-reference identifier: string (looks like @XYZ@) signals beginning new record (apart header trailer); Tag: short string given immediately level cross-reference identifier indicates type information provided line. controlled values. User-defined tags allowed GEDCOM programs, discouraged ; Line value: value associated tag. example, line 3, version GEDCOM specification file adheres 7.0. line value can also cross-reference pointer, links another record file (looks like @XYZ@). example, Family record beginning line 18 references Individual records members family. lines components. example, first line records contain line value. GEDCOM 7.0 specification substantial, describing strict rules around specific set tags hierarchical structures allowed record type. shouldn’t need know use package, designed automate construction files.","code":"sample_file <- readLines(\"https://gedcom.io/testfiles/gedcom70/remarriage1.ged\") sample_file #>  [1] \"0 HEAD\"                 \"1 GEDC\"                 \"2 VERS 7.0\"             #>  [4] \"0 @I1@ INDI\"            \"1 NAME John Q /Public/\" \"1 SEX M\"                #>  [7] \"1 FAMS @F1@\"            \"1 FAMS @F2@\"            \"0 @I2@ INDI\"            #> [10] \"1 NAME Jane /Doe/\"      \"1 SEX F\"                \"1 FAMS @F1@\"            #> [13] \"0 @I3@ INDI\"            \"1 NAME Mary /Roe},{"path":"https://jl5000.github.io/gedcomS7/articles/2_implementation.html","id":"why-gedcoms7","dir":"Articles","previous_headings":"","what":"Why gedcomS7?","title":"Implementation of gedcomS7","text":"One main characteristics wanted package hide complexity GEDCOM specification, try automate genealogical tasks time consuming manually. spent significant amount time writing code considering options data stored hood. one blog considered storing genealogical data relational table format easier deal , discounted quickly well suited nested data (list columns easy deal ). toyed idea using --shelf open source product like GRAMPS found awkward use wanted something complete control, taking full advantage strengths R. also considered using data structures suited type data, JSON graphs (using igraph data.tree package). However, discovered quite difficult representing structures GEDCOM specification satisfaction. preference Object Orientated approach, many applications use, none OOP solutions R quite fit bill. first serious attempt resulted tidyged packages gedcompendium. adopted dataframe tidyverse approach whilst work dependency-heavy required lot processing hood. release S7 presented ideal opportunity revisit creating OOP-based GEDCOM package R. Initial testing promising results continued building rest package, using updated GEDCOM 7.0 specification.","code":""},{"path":"https://jl5000.github.io/gedcomS7/articles/2_implementation.html","id":"the-gedcoms7-object","dir":"Articles","previous_headings":"","what":"The gedcomS7 object","title":"Implementation of gedcomS7","text":"main GEDCOM object S7 representation GEDCOM file: Properties GEDCOM object can accessed modified using @ operator, e.g. ease modification specific properties GEDCOM object wasn’t possible tidyged package. Properties don’t values either empty vectors, empty lists, NULL (depending property). properties also read-(calculated properties), @c_next_xref @c_as_ged. exploration properties GEDCOM object beyond scope article, however implementation records stored important.","code":"ged <- read_gedcom(\"https://gedcom.io/testfiles/gedcom70/remarriage1.ged\")  str(ged) #> <gedcomS7::GedcomS7> #>  @ gedcom_version     : chr \"7.0\" #>  @ ext_tags           : chr(0)  #>  @ source             : NULL #>  @ destination        : chr(0)  #>  @ creation_date      : chr(0)  #>  @ creation_time      : chr(0)  #>  @ subm_xref          : chr(0)  #>  @ gedcom_copyright   : chr(0)  #>  @ default_language   : chr(0)  #>  @ default_place_form : chr(0)  #>  @ notes              : list() #>  @ note_xrefs         : chr(0)  #>  @ c_hd_as_ged        : chr [1:3] \"0 HEAD\" \"1 GEDC\" \"2 VERS 7.0\" #>  @ update_change_dates: logi FALSE #>  @ add_creation_dates : logi FALSE #>  @ subm               : Named list() #>  @ indi               :List of 3 #>  .. $ @I1@: chr [1:5] \"0 @I1@ INDI\" \"1 NAME John Q /Public/\" \"1 SEX M\" \"1 FAMS @F1@\" ... #>  .. $ @I2@: chr [1:4] \"0 @I2@ INDI\" \"1 NAME Jane /Doe/\" \"1 SEX F\" \"1 FAMS @F1@\" #>  .. $ @I3@: chr [1:5] \"0 @I3@ INDI\" \"1 NAME Mary /Roe/\" \"1 DEAT\" \"2 DATE 1 MAR 1914\" ... #>  @ fam                :List of 2 #>  .. $ @F1@: chr [1:9] \"0 @F1@ FAM\" \"1 HUSB @I1@\" \"1 WIFE @I2@\" \"1 MARR\" ... #>  .. $ @F2@: chr [1:5] \"0 @F2@ FAM\" \"1 HUSB @I1@\" \"1 WIFE @I3@\" \"1 MARR\" ... #>  @ sour               : Named list() #>  @ repo               : Named list() #>  @ media              : Named list() #>  @ note               : Named list() #>  @ xref_prefixes      : Named chr [1:7] \"U\" \"I\" \"F\" \"S\" \"R\" \"M\" \"N\" #>  .. - attr(*, \"names\")= chr [1:7] \"subm\" \"indi\" \"fam\" \"sour\" ... #>  @ c_xrefs            :List of 7 #>  .. $ subm : chr(0)  #>  .. $ indi : chr [1:3] \"@I1@\" \"@I2@\" \"@I3@\" #>  .. $ fam  : chr [1:2] \"@F1@\" \"@F2@\" #>  .. $ sour : chr(0)  #>  .. $ repo : chr(0)  #>  .. $ media: chr(0)  #>  .. $ note : chr(0)  #>  @ c_next_xref        : Named chr [1:7] \"@U1@\" \"@I4@\" \"@F3@\" \"@S1@\" \"@R1@\" \"@M1@\" \"@N1@\" #>  .. - attr(*, \"names\")= chr [1:7] \"subm\" \"indi\" \"fam\" \"sour\" ... #>  @ c_as_ged           : chr [1:32] \"0 HEAD\" \"1 GEDC\" \"2 VERS 7.0\" \"0 @I1@ INDI\" ... ged@default_language #> character(0) ged@default_language <- \"en\""},{"path":"https://jl5000.github.io/gedcomS7/articles/2_implementation.html","id":"the-pushpull-paradigm","dir":"Articles","previous_headings":"","what":"The Push/Pull paradigm","title":"Implementation of gedcomS7","text":"GEDCOM file contain many thousands records containing information individuals, families, notes, sources, etc. Whilst storing records S7 objects within main GEDCOM object theoretically possible, practice quickly eats much memory rendering idea non-starter. reason, records stored raw form GEDCOM file lists character vectors. example @indi property list individual records. lines GEDCOM file first individual : can also reference records xref: want edit record, must first Pull GEDCOM object. takes copy record parses editable S7 object. can edit property Push back GEDCOM object: never attempt modify records character vector form directly GEDCOM object - additional checks automated tasks carried ensure self-consistency Push process.","code":"ged@indi[[1]] #> [1] \"0 @I1@ INDI\"            \"1 NAME John Q /Public/\" \"1 SEX M\"                #> [4] \"1 FAMS @F1@\"            \"1 FAMS @F2@\" ged@indi[[\"@I1@\"]] #> [1] \"0 @I1@ INDI\"            \"1 NAME John Q /Public/\" \"1 SEX M\"                #> [4] \"1 FAMS @F1@\"            \"1 FAMS @F2@\" john_public <- pull_record(ged, \"@I1@\")  john_public #> <gedcomS7::IndividualRecord> #>  @ xref          : chr \"@I1@\" #>  @ confidential  : logi FALSE #>  @ locked        : logi FALSE #>  @ private       : logi FALSE #>  @ user_ids      : chr(0)  #>  @ unique_ids    : chr(0)  #>  @ ext_ids       : chr(0)  #>  @ note_xrefs    : chr(0)  #>  @ notes         : list() #>  @ citations     : list() #>  @ media_links   : list() #>  @ created       : NULL #>  @ updated       : NULL #>  @ c_restrictions: chr(0)  #>  @ c_ids_as_ged  : chr(0)  #>  @ pers_names    :List of 1 #>  @ sex           : chr \"M\" #>  @ facts         : list() #>  @ non_events    : list() #>  @ ordinances    : list() #>  @ fam_links_chil: list() #>  @ fam_links_spou:List of 2 #>  @ subm_xrefs    : chr(0)  #>  @ associations  : list() #>  @ alia_xrefs    : chr(0)  #>  @ anci_xrefs    : chr(0)  #>  @ desi_xrefs    : chr(0)  #>  @ c_primary_name: chr \"John Q /Public/\" #>  @ c_all_names   : chr \"John Q /Public/\" #>  @ c_desc_short  : chr \"Individual @I1@, John Q /Public/\" #>  @ c_birth_date  : chr(0)  #>  @ c_birth_place : chr(0)  #>  @ c_death_date  : chr(0)  #>  @ c_death_place : chr(0)  #>  @ c_as_ged      : chr [1:5] \"0 @I1@ INDI\" \"1 NAME John Q /Public/\" \"1 SEX M\" ... john_public@notes <- \"John once had a dog called Rover\"  ged <- push_record(ged, john_public)  ged@indi[[1]] #> [1] \"0 @I1@ INDI\"                             #> [2] \"1 NAME John Q /Public/\"                  #> [3] \"1 SEX M\"                                 #> [4] \"1 FAMS @F1@\"                             #> [5] \"1 FAMS @F2@\"                             #> [6] \"1 NOTE John once had a dog called Rover\""},{"path":"https://jl5000.github.io/gedcomS7/articles/3_gedcom_creation.html","id":"creating-new-objects","dir":"Articles","previous_headings":"","what":"Creating new objects","title":"Creation of GEDCOM objects","text":"easiest way create GEDCOM object import existing GEDCOM file. print GEDCOM object console provides brief summary file. example imports smallest legal GEDCOM file: GEDCOM object can also created using new_gedcom() function: minimal GEDCOM object created gedcomS7 comes pre-populated additional information (minimal GEDCOM file). Information gedcomS7 package (system/product creating file) given appropriate places, creation date, well default language (English). default language can changed new_gedcom() function. must character string language tags defined BCP 47 (must language parameter package). GEDCOM object R, can write valid GEDCOM file using write_gedcom(). filepath must end file extension .ged.","code":"ged <- read_gedcom(\"https://gedcom.io/testfiles/gedcom70/minimal70.ged\")  ged #> GEDCOM file summary: #>   #> GEDCOM version:         7.0 #> Creation Date:          <Undefined> #> Default Language:       <Undefined> #> Submitter:              <Undefined> #>  #> Copyright:              <Undefined> #>  #> Source system:          <Undefined> #>  #> Submitters:             0 #> Individuals:            0 #> Families:               0 #> Sources:                0 #> Repositories:           0 #> Multimedia:             0 #> Notes:                  0 ged_new <- new_gedcom()  ged_new #> GEDCOM file summary: #>   #> GEDCOM version:         7.0 #> Creation Date:          19 DEC 2024 #> Default Language:       en #> Submitter:              <Undefined> #>  #> Copyright:              <Undefined> #>  #> Source system:          https://github.com/jl5000/gedcomS7 #> Product name:           The 'gedcomS7' package for the R language #> Source system version:  <Undefined> #>  #> Submitters:             0 #> Individuals:            0 #> Families:               0 #> Sources:                0 #> Repositories:           0 #> Multimedia:             0 #> Notes:                  0"},{"path":"https://jl5000.github.io/gedcomS7/articles/3_gedcom_creation.html","id":"gedcom-object-properties","dir":"Articles","previous_headings":"","what":"GEDCOM object properties","title":"Creation of GEDCOM objects","text":"properties GEDCOM object : properties main GEDCOM object either: Lists records type (@subm, @indi, @fam, @sour, @repo, @media, @note); summarise control cross-reference identifiers (xrefs) given records (@c_xrefs, @xref_prefixes, @c_next_xref); allow user control whether creation/change dates added records pushed GEDCOM object (@update_change_dates @add_creation_dates) - don’t default can bloat files considerably; show GEDCOM file representation looks like (@c_as_ged) representation header (@c_hd_as_ged); Properties header (metadata file whole). properties also read-, means calculated properties directly set. given prefix c_.","code":"str(ged) #> <gedcomS7::GedcomS7> #>  @ gedcom_version     : chr \"7.0\" #>  @ ext_tags           : chr(0)  #>  @ source             : NULL #>  @ destination        : chr(0)  #>  @ creation_date      : chr(0)  #>  @ creation_time      : chr(0)  #>  @ subm_xref          : chr(0)  #>  @ gedcom_copyright   : chr(0)  #>  @ default_language   : chr(0)  #>  @ default_place_form : chr(0)  #>  @ notes              : list() #>  @ note_xrefs         : chr(0)  #>  @ c_hd_as_ged        : chr [1:3] \"0 HEAD\" \"1 GEDC\" \"2 VERS 7.0\" #>  @ update_change_dates: logi FALSE #>  @ add_creation_dates : logi FALSE #>  @ subm               : Named list() #>  @ indi               : Named list() #>  @ fam                : Named list() #>  @ sour               : Named list() #>  @ repo               : Named list() #>  @ media              : Named list() #>  @ note               : Named list() #>  @ xref_prefixes      : Named chr [1:7] \"U\" \"I\" \"F\" \"S\" \"R\" \"M\" \"N\" #>  .. - attr(*, \"names\")= chr [1:7] \"subm\" \"indi\" \"fam\" \"sour\" ... #>  @ c_xrefs            :List of 7 #>  .. $ subm : chr(0)  #>  .. $ indi : chr(0)  #>  .. $ fam  : chr(0)  #>  .. $ sour : chr(0)  #>  .. $ repo : chr(0)  #>  .. $ media: chr(0)  #>  .. $ note : chr(0)  #>  @ c_next_xref        : Named chr [1:7] \"@U1@\" \"@I1@\" \"@F1@\" \"@S1@\" \"@R1@\" \"@M1@\" \"@N1@\" #>  .. - attr(*, \"names\")= chr [1:7] \"subm\" \"indi\" \"fam\" \"sour\" ... #>  @ c_as_ged           : chr [1:4] \"0 HEAD\" \"1 GEDC\" \"2 VERS 7.0\" \"0 TRLR\""},{"path":"https://jl5000.github.io/gedcomS7/articles/4_cross_references.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Referencing records","text":"GEDCOM records given unique identifiers known xrefs (cross-references) allow records link . alphanumeric strings surrounded ‘@’ symbols. Record identifiers topic much discussion GEDCOM user community. Even though xref identifiers imported unchanged gedcomS7 package, systems create xref identifiers import. assume survive systems. However, always internally consistent. reason xref identifiers supposed exposed typical user. However rule can really applied GEDCOM software point--click user interface, rather one works interactively R console (S7 package allow hide property values). shiny app created, xrefs hidden user.","code":""},{"path":"https://jl5000.github.io/gedcomS7/articles/4_cross_references.html","id":"summarising-and-controlling-identifiers","dir":"Articles","previous_headings":"","what":"Summarising and controlling identifiers","title":"Referencing records","text":"gedcomS7 package creates xrefs automatically creating pushing new records. creating new record given xref identifying standalone record yet pushed GEDCOM object: special xref indicates code new record existing one. important change . push GEDCOM object, assign proper xref: property ged@xref_prefixes named vector containing alphanumeric string (6 characters long) precede number given identify new records (7 types). vector must particular length specific names. ’ll import different GEDCOM file records : order records appear vector also dictate order records appear exported file. @c_xrefs property gives list record xrefs GEDCOM object, split records type: next xrefs type therefore :","code":"new_person <- IndividualRecord() new_person@xref #> [1] \"@ORPHAN@\" ged <- push_record(new_gedcom(), new_person) #> New Individual record added with xref @I1@ ged_max <- read_gedcom(\"https://gedcom.io/testfiles/gedcom70/maximal70.ged\")  ged_max@xref_prefixes #>  subm  indi   fam  sour  repo media  note  #>   \"U\"   \"I\"   \"F\"   \"S\"   \"R\"   \"M\"   \"N\" ged_max@c_xrefs #> $subm #> [1] \"@U1@\" \"@U2@\" #>  #> $indi #> [1] \"@I1@\" \"@I2@\" \"@I3@\" \"@I4@\" #>  #> $fam #> [1] \"@F1@\" \"@F2@\" #>  #> $sour #> [1] \"@S1@\" \"@S2@\" #>  #> $repo #> [1] \"@R1@\" \"@R2@\" #>  #> $media #> [1] \"@O1@\" \"@O2@\" #>  #> $note #> [1] \"@N1@\" \"@N2@\" ged_max@c_next_xref #>   subm   indi    fam   sour   repo  media   note  #> \"@U3@\" \"@I5@\" \"@F3@\" \"@S3@\" \"@R3@\" \"@M1@\" \"@N3@\""},{"path":"https://jl5000.github.io/gedcomS7/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jamie Lendrum. Author, maintainer.","code":""},{"path":"https://jl5000.github.io/gedcomS7/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lendrum J (2024). gedcomS7: Create Family Tree GEDCOM Files S7 Objects. R package version 0.0.0.9000, https://jl5000.github.io/gedcomS7/.","code":"@Manual{,   title = {gedcomS7: Create Family Tree GEDCOM Files with S7 Objects},   author = {Jamie Lendrum},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://jl5000.github.io/gedcomS7/}, }"},{"path":"https://jl5000.github.io/gedcomS7/index.html","id":"gedcoms7","dir":"","previous_headings":"","what":"Create Family Tree GEDCOM Files with S7 Objects","title":"Create Family Tree GEDCOM Files with S7 Objects","text":"goal gedcomS7 handle genealogical data GEDCOM files. package succeeds tidyged package many packages gedcompendium. key changes : package designed work GEDCOM 7.0, rather 5.5.5. package minimal dependencies; currently one: S7. GEDCOM files stored S7 objects rather dataframes. package contains functionality create, edit, interrogate GEDCOM files.","code":""},{"path":"https://jl5000.github.io/gedcomS7/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Family Tree GEDCOM Files with S7 Objects","text":"can install development version gedcomS7 GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"jl5000/gedcomS7\")"},{"path":"https://jl5000.github.io/gedcomS7/index.html","id":"key-limitations","dir":"","previous_headings":"","what":"Key limitations","title":"Create Family Tree GEDCOM Files with S7 Objects","text":"importing existing GEDCOM files, ensure error free. package assumes imported GEDCOM files valid validation checks carried . Several GEDCOM validators available, including online validator https://ged-inline.org/. package currently support extension tags. import file features, package may behave unpredictably.","code":""},{"path":"https://jl5000.github.io/gedcomS7/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create Family Tree GEDCOM Files with S7 Objects","text":"GEDCOM files can imported created scratch, creating S7 object representation: metadata gedcom object (ged@…) can modified. New records can created ‘pushed’ GEDCOM object: Existing records, must ‘pulled’ object, edited, ‘pushed’ back. entire GEDCOM representation can seen @c_as_ged property: object can exported GEDCOM file:","code":"library(gedcomS7)  ged <- read_gedcom(\"https://gedcom.io/testfiles/gedcom70/remarriage1.ged\")  ged <- new_gedcom() ged #> GEDCOM file summary: #>   #> GEDCOM version:         7.0 #> Creation Date:          19 DEC 2024 #> Default Language:       en #> Submitter:              <Undefined> #>  #> Copyright:              <Undefined> #>  #> Source system:          https://github.com/jl5000/gedcomS7 #> Product name:           The 'gedcomS7' package for the R language #> Source system version:  <Undefined> #>  #> Submitters:             0 #> Individuals:            0 #> Families:               0 #> Sources:                0 #> Repositories:           0 #> Multimedia:             0 #> Notes:                  0 ged@notes <- \"This file contains my family tree\" ged@gedcom_copyright <- \"Copyright Jamie Lendrum 2023\" ged #> GEDCOM file summary: #>   #> GEDCOM version:         7.0 #> Creation Date:          19 DEC 2024 #> Default Language:       en #> Submitter:              <Undefined> #>  #> Copyright:              Copyright Jamie Lendrum 2023 #>  #> Source system:          https://github.com/jl5000/gedcomS7 #> Product name:           The 'gedcomS7' package for the R language #> Source system version:  <Undefined> #>  #> Submitters:             0 #> Individuals:            0 #> Families:               0 #> Sources:                0 #> Repositories:           0 #> Multimedia:             0 #> Notes:                  0 subm_record <- SubmitterRecord(subm_name = \"Jamie Lendrum\") indi_record <- IndividualRecord(sex = \"M\",                                 pers_names = PersonalName(\"Joe /Bloggs/\")) sour_record <- SourceRecord(full_title = \"Census of England and Wales, 1921\")  ged <- ged |>    push_record(subm_record) |>    push_record(indi_record) |>    push_record(sour_record) #> New Submitter record added with xref @U1@ #> New Individual record added with xref @I1@ #> New Source record added with xref @S1@ joe_bloggs <- pull_record(ged, \"@I1@\") joe_bloggs@notes <- \"He had a dog called Rover\" ged <- push_record(ged, joe_bloggs) ged@c_as_ged #>  [1] \"0 HEAD\"                                           #>  [2] \"1 GEDC\"                                           #>  [3] \"2 VERS 7.0\"                                       #>  [4] \"1 SOUR https://github.com/jl5000/gedcomS7\"        #>  [5] \"2 NAME The 'gedcomS7' package for the R language\" #>  [6] \"2 CORP Jamie Lendrum\"                             #>  [7] \"3 EMAIL jalendrum@gmail.com\"                      #>  [8] \"1 DATE 19 DEC 2024\"                               #>  [9] \"1 COPR Copyright Jamie Lendrum 2023\"              #> [10] \"1 LANG en\"                                        #> [11] \"1 NOTE This file contains my family tree\"         #> [12] \"0 @U1@ SUBM\"                                      #> [13] \"1 NAME Jamie Lendrum\"                             #> [14] \"0 @I1@ INDI\"                                      #> [15] \"1 NAME Joe /Bloggs/\"                              #> [16] \"1 SEX M\"                                          #> [17] \"1 NOTE He had a dog called Rover\"                 #> [18] \"0 @S1@ SOUR\"                                      #> [19] \"1 TITL Census of England and Wales, 1921\"         #> [20] \"0 TRLR\" write_gedcom(ged, \"my_gedcom.ged\")"},{"path":"https://jl5000.github.io/gedcomS7/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Create Family Tree GEDCOM Files with S7 Objects","text":"FamilySearch GEDCOM Specification, Prepared Family History Department, Church Jesus Christ Latter-day Saints. https://gedcom.io/specifications/FamilySearchGEDCOMv7.html","code":""},{"path":"https://jl5000.github.io/gedcomS7/index.html","id":"notice","dir":"","previous_headings":"","what":"Notice","title":"Create Family Tree GEDCOM Files with S7 Objects","text":"work comprises, based , derived FAMILYSEARCH GEDCOM™ Specification, © 1984-2023 Intellectual Reserve, Inc. rights reserved. “FAMILYSEARCH GEDCOM™” “FAMILYSEARCH®” trademarks Intellectual Reserve, Inc. may used except allowed Apache 2.0 license governs work expressly authorized writing advance Intellectual Reserve, Inc.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Address.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an address object — Address","title":"Create an address object — Address","text":"Create address object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an address object — Address","text":"","code":"Address(   full = character(0),   city = character(0),   state = character(0),   postal_code = character(0),   country = character(0),   adr1 = character(0),   adr2 = character(0),   adr3 = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/Address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an address object — Address","text":"full full address appear mailing label, lines separated semi-colon space. example: \"White House; 1600 Pennsylvania Avenue N.W.; Washington, DC 20500; United States America\" city city component address. state state component address. postal_code postal code component address. country country component address. adr1, adr2, adr3 Deprecated.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an address object — Address","text":"S7 object representing GEDCOM ADDRESS_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Association.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an association object — Association","title":"Create an association object — Association","text":"Create association object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an association object — Association","text":"","code":"Association(   indi_xref = \"@VOID@\",   indi_phrase = character(0),   relation_is = character(0),   relation_phrase = character(0),   note_xrefs = character(0),   notes = list(),   citations = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/Association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an association object — Association","text":"indi_xref cross-reference identifier individual record. individual record, can left blank value \"@VOID@\" used. However, define @indi_phrase. indi_phrase Textual information expressed @indi_xref. relation_is nature association. must value val_roles(). value \"\" used, @relation_phrase must given. relation_phrase Textual information expressed relation. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Association.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an association object — Association","text":"S7 object representing GEDCOM ASSOCIATION_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/ChangeDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a change date object — ChangeDate","title":"Create a change date object — ChangeDate","text":"Create change date object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/ChangeDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a change date object — ChangeDate","text":"","code":"ChangeDate(   date_exact = \"18 DEC 2024\",   time = character(0),   note_xrefs = character(0),   notes = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/ChangeDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a change date object — ChangeDate","text":"date_exact exact date given either formatted GEDCOM string, DateExact object. given, default today's date. time time given either formatted GEDCOM string, Time object. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/ChangeDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a change date object — ChangeDate","text":"S7 object representing GEDCOM CHANGE_DATE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/CreationDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a creation date object — CreationDate","title":"Create a creation date object — CreationDate","text":"Create creation date object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/CreationDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a creation date object — CreationDate","text":"","code":"CreationDate(date_exact = \"18 DEC 2024\", time = character(0))"},{"path":"https://jl5000.github.io/gedcomS7/reference/CreationDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a creation date object — CreationDate","text":"date_exact exact date given either formatted GEDCOM string, DateExact object. given, default today's date. time time given either formatted GEDCOM string, Time object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/CreationDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a creation date object — CreationDate","text":"S7 object representing GEDCOM CREATION_DATE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateApprox.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM Approximate Date object — DateApprox","title":"Create a GEDCOM Approximate Date object — DateApprox","text":"Create GEDCOM Approximate Date object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateApprox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM Approximate Date object — DateApprox","text":"","code":"DateApprox(date_greg = character(0), about = TRUE, calc = FALSE, est = FALSE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/DateApprox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM Approximate Date object — DateApprox","text":"date_greg Gregorian date given either formatted GEDCOM string, DateGregorian object. Whether date near date given. calc Whether date calculated values. est Whether date near date given, calculated values.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateApprox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM Approximate Date object — DateApprox","text":"S7 object representing GEDCOM Approximate Date.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateExact.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM Exact Date object — DateExact","title":"Create a GEDCOM Exact Date object — DateExact","text":"Create GEDCOM Exact Date object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateExact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM Exact Date object — DateExact","text":"","code":"DateExact(year = integer(0), month = integer(0), day = integer(0))"},{"path":"https://jl5000.github.io/gedcomS7/reference/DateExact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM Exact Date object — DateExact","text":"year year given integer (greater 0). month month year given integer 1 12. day day month given integer 1 31.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateExact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM Exact Date object — DateExact","text":"S7 object representing GEDCOM Exact Date.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateGregorian.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM Gregorian Date object — DateGregorian","title":"Create a GEDCOM Gregorian Date object — DateGregorian","text":"Create GEDCOM Gregorian Date object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateGregorian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM Gregorian Date object — DateGregorian","text":"","code":"DateGregorian(   year = integer(0),   month = integer(0),   day = integer(0),   bce = FALSE )"},{"path":"https://jl5000.github.io/gedcomS7/reference/DateGregorian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM Gregorian Date object — DateGregorian","text":"year year given integer (greater 0). month month year given integer 1 12. day day month given integer 1 31. bce Whether date Common Era. FALSE default, TRUE, year given.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateGregorian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM Gregorian Date object — DateGregorian","text":"S7 object representing GEDCOM Gregorian Date.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DatePeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM Date Period object — DatePeriod","title":"Create a GEDCOM Date Period object — DatePeriod","text":"Create GEDCOM Date Period object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DatePeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM Date Period object — DatePeriod","text":"","code":"DatePeriod(start_date = character(0), end_date = character(0))"},{"path":"https://jl5000.github.io/gedcomS7/reference/DatePeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM Date Period object — DatePeriod","text":"start_date start period/range given either formatted GEDCOM string, DateGregorian object. end_date end period/range given either formatted GEDCOM string, DateGregorian object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DatePeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM Date Period object — DatePeriod","text":"S7 object representing GEDCOM Date Period.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM Date Range object — DateRange","title":"Create a GEDCOM Date Range object — DateRange","text":"Create GEDCOM Date Range object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM Date Range object — DateRange","text":"","code":"DateRange(start_date = character(0), end_date = character(0))"},{"path":"https://jl5000.github.io/gedcomS7/reference/DateRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM Date Range object — DateRange","text":"start_date start period/range given either formatted GEDCOM string, DateGregorian object. end_date end period/range given either formatted GEDCOM string, DateGregorian object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM Date Range object — DateRange","text":"S7 object representing GEDCOM Date Range.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateSorting.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM Sorting Date object — DateSorting","title":"Create a GEDCOM Sorting Date object — DateSorting","text":"Create GEDCOM Sorting Date object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateSorting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM Sorting Date object — DateSorting","text":"","code":"DateSorting(   date = character(0),   date_phrase = character(0),   time = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/DateSorting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM Sorting Date object — DateSorting","text":"date date given either formatted GEDCOM string, DateGregorian object. date_phrase Textual information expressed date. time time given either formatted GEDCOM string, Time object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateSorting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM Sorting Date object — DateSorting","text":"S7 object representing GEDCOM Sorting Date.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM Date Value object — DateValue","title":"Create a GEDCOM Date Value object — DateValue","text":"Create GEDCOM Date Value object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM Date Value object — DateValue","text":"","code":"DateValue(date = character(0), date_phrase = character(0), time = character(0))"},{"path":"https://jl5000.github.io/gedcomS7/reference/DateValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM Date Value object — DateValue","text":"date date given either formatted GEDCOM string, DateValue object. date_phrase Textual information expressed date. time time given either formatted GEDCOM string, Time object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/DateValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM Date Value object — DateValue","text":"S7 object representing GEDCOM Date Value.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Fact.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a fact object — Fact","title":"Create a fact object — Fact","text":"Create fact object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a fact object — Fact","text":"","code":"Fact(   fact_type = character(0),   fact_val = character(0),   fact_desc = character(0),   date = character(0),   place = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   agency = character(0),   relig_affil = character(0),   cause = character(0),   confidential = FALSE,   locked = FALSE,   private = FALSE,   date_sort = character(0),   associations = list(),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   unique_ids = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/Fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a fact object — Fact","text":"fact_type TODO fact_val TODO fact_desc TODO date date given either formatted GEDCOM string, DateValue object. place see territory address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. relig_affil religious denomination associated fact. cause Used special cases record reasons precipitated fact (e.g. cause death). confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. date_sort date given either formatted GEDCOM string, DateSorting object. associations Associated individuals. can either Association object list . note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a fact object — Fact","text":"S7 object representing GEDCOM EVENT_DETAIL (plus bit ).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FactsRecorded.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object recording facts covered in a source record — FactsRecorded","title":"Create an object recording facts covered in a source record — FactsRecorded","text":"Create object recording facts covered source record","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FactsRecorded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object recording facts covered in a source record — FactsRecorded","text":"","code":"FactsRecorded(   fact_types = character(0),   date_period = character(0),   date_phrase = character(0),   territory = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/FactsRecorded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object recording facts covered in a source record — FactsRecorded","text":"fact_types character string indicating types events recorded particular source. event type separated comma space. example, parish register births, deaths, marriages BIRT, DEAT, MARR. date_period date period given either formatted GEDCOM string, DatePeriod object. date_phrase Textual information expressed date. territory territory associated events covered. can either Place object character string (comma-separated string region names, ordered smallest largest). character string provided region names can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FactsRecorded.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object recording facts covered in a source record — FactsRecorded","text":"S7 object representing GEDCOM SOUR.EVEN structure.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a family attribute object — FamilyAttribute","title":"Create a family attribute object — FamilyAttribute","text":"Create family attribute object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a family attribute object — FamilyAttribute","text":"","code":"FamilyAttribute(   fact_type = character(0),   fact_val = character(0),   fact_desc = character(0),   date = character(0),   place = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   agency = character(0),   relig_affil = character(0),   cause = character(0),   confidential = FALSE,   locked = FALSE,   private = FALSE,   date_sort = character(0),   associations = list(),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   unique_ids = character(0),   husb_age = character(0),   husb_age_phrase = character(0),   wife_age = character(0),   wife_age_phrase = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a family attribute object — FamilyAttribute","text":"fact_type TODO fact_val TODO fact_desc TODO date date given either formatted GEDCOM string, DateValue object. place see territory address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. relig_affil religious denomination associated fact. cause Used special cases record reasons precipitated fact (e.g. cause death). confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. date_sort date given either formatted GEDCOM string, DateSorting object. associations Associated individuals. can either Association object list . note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyAttribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a family attribute object — FamilyAttribute","text":"S7 object representing GEDCOM FAMILY_ATTRIBUTE_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyEvent.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a family event object — FamilyEvent","title":"Create a family event object — FamilyEvent","text":"Create family event object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyEvent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a family event object — FamilyEvent","text":"","code":"FamilyEvent(   fact_type = character(0),   fact_val = character(0),   fact_desc = character(0),   date = character(0),   place = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   agency = character(0),   relig_affil = character(0),   cause = character(0),   confidential = FALSE,   locked = FALSE,   private = FALSE,   date_sort = character(0),   associations = list(),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   unique_ids = character(0),   husb_age = character(0),   husb_age_phrase = character(0),   wife_age = character(0),   wife_age_phrase = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyEvent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a family event object — FamilyEvent","text":"fact_type TODO fact_val TODO fact_desc TODO date date given either formatted GEDCOM string, DateValue object. place see territory address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. relig_affil religious denomination associated fact. cause Used special cases record reasons precipitated fact (e.g. cause death). confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. date_sort date given either formatted GEDCOM string, DateSorting object. associations Associated individuals. can either Association object list . note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyEvent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a family event object — FamilyEvent","text":"S7 object representing GEDCOM FAMILY_EVENT_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyFact.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a family fact object — FamilyFact","title":"Create a family fact object — FamilyFact","text":"Create family fact object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyFact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a family fact object — FamilyFact","text":"","code":"FamilyFact(   fact_type = character(0),   fact_val = character(0),   fact_desc = character(0),   date = character(0),   place = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   agency = character(0),   relig_affil = character(0),   cause = character(0),   confidential = FALSE,   locked = FALSE,   private = FALSE,   date_sort = character(0),   associations = list(),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   unique_ids = character(0),   husb_age = character(0),   husb_age_phrase = character(0),   wife_age = character(0),   wife_age_phrase = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyFact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a family fact object — FamilyFact","text":"fact_type TODO fact_val TODO fact_desc TODO date date given either formatted GEDCOM string, DateValue object. place see territory address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. relig_affil religious denomination associated fact. cause Used special cases record reasons precipitated fact (e.g. cause death). confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. date_sort date given either formatted GEDCOM string, DateSorting object. associations Associated individuals. can either Association object list . note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyFact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a family fact object — FamilyFact","text":"S7 object representing GEDCOM FAMILY_EVENT_DETAIL (plus bit ).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyLinkChild.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a family link (as child) object — FamilyLinkChild","title":"Create a family link (as child) object — FamilyLinkChild","text":"Create family link (child) object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyLinkChild.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a family link (as child) object — FamilyLinkChild","text":"","code":"FamilyLinkChild(   fam_xref = character(0),   note_xrefs = character(0),   notes = list(),   pedigree = character(0),   pedigree_phrase = character(0),   confidence = character(0),   confidence_phrase = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyLinkChild.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a family link (as child) object — FamilyLinkChild","text":"fam_xref cross-reference identifier family record. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. pedigree TODO pedigree_phrase TODO confidence TODO confidence_phrase TODO","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyLinkChild.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a family link (as child) object — FamilyLinkChild","text":"S7 object representing GEDCOM family link child.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyLinkSpouse.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a family link (as spouse) object — FamilyLinkSpouse","title":"Create a family link (as spouse) object — FamilyLinkSpouse","text":"Create family link (spouse) object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyLinkSpouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a family link (as spouse) object — FamilyLinkSpouse","text":"","code":"FamilyLinkSpouse(   fam_xref = character(0),   note_xrefs = character(0),   notes = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyLinkSpouse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a family link (as spouse) object — FamilyLinkSpouse","text":"fam_xref cross-reference identifier family record. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyLinkSpouse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a family link (as spouse) object — FamilyLinkSpouse","text":"S7 object representing GEDCOM family link spouse.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a family record object — FamilyRecord","title":"Create a family record object — FamilyRecord","text":"Create family record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a family record object — FamilyRecord","text":"","code":"FamilyRecord(   xref = \"@ORPHAN@\",   confidential = FALSE,   locked = FALSE,   private = FALSE,   user_ids = character(0),   unique_ids = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   created = NULL,   updated = NULL,   facts = list(),   non_events = list(),   husb_xref = character(0),   wife_xref = character(0),   chil_xrefs = character(0),   associations = list(),   subm_xrefs = character(0),   spouse_sealings = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a family record object — FamilyRecord","text":"xref cross-reference identifier record. edit maintenance done automatically. confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today. facts TODO non_events TODO husb_xref, wife_xref, chil_xrefs cross-reference identifier(s) member's individual records. individual record, value \"@VOID@\" can used. However, need describe individual using named vector (description can used either case), e.g. c(\"Joe Bloggs\" = \"@VOID@\") c(\"Joe Bloggs\" = \"@I1@\") associations Associated individuals. can either Association object list . subm_xrefs character vector relevant submitter record cross-reference identifiers. spouse_sealings TODO","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/FamilyRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a family record object — FamilyRecord","text":"S7 object representing GEDCOM FAMILY_RECORD.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM header object — GedcomHeader","title":"Create a GEDCOM header object — GedcomHeader","text":"Create GEDCOM header object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomHeader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM header object — GedcomHeader","text":"","code":"GedcomHeader(   gedcom_version = character(0),   ext_tags = character(0),   source = NULL,   destination = character(0),   creation_date = <object>,   creation_time = character(0),   subm_xref = character(0),   gedcom_copyright = character(0),   default_language = character(0),   default_place_form = character(0),   notes = list(),   note_xrefs = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM header object — GedcomHeader","text":"gedcom_version TODO ext_tags TODO source TODO destination TODO creation_date creation date file given either formatted GEDCOM string, DateExact object. creation_time creation time file given either formatted GEDCOM string, Time object. subm_xref cross-reference identifier submitter record. gedcom_copyright TODO default_language TODO default_place_form TODO notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. note_xrefs character vector relevant note record cross-reference identifiers.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomHeader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM header object — GedcomHeader","text":"S7 object representing GEDCOM HEADER.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomS7.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM object — GedcomS7","title":"Create a GEDCOM object — GedcomS7","text":"Create GEDCOM object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomS7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM object — GedcomS7","text":"","code":"GedcomS7(   gedcom_version = character(0),   ext_tags = character(0),   source = NULL,   destination = character(0),   creation_date = <object>,   creation_time = character(0),   subm_xref = character(0),   gedcom_copyright = character(0),   default_language = character(0),   default_place_form = character(0),   notes = list(),   note_xrefs = character(0),   update_change_dates = FALSE,   add_creation_dates = FALSE,   subm = list(),   indi = list(),   fam = list(),   sour = list(),   repo = list(),   media = list(),   note = list(),   xref_prefixes = c(subm = \"U\", indi = \"I\", fam = \"F\", sour = \"S\", repo = \"R\", media =     \"M\", note = \"N\") )"},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomS7.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM object — GedcomS7","text":"gedcom_version TODO ext_tags TODO source TODO destination TODO creation_date creation date file given either formatted GEDCOM string, DateExact object. creation_time creation time file given either formatted GEDCOM string, Time object. subm_xref cross-reference identifier submitter record. gedcom_copyright TODO default_language TODO default_place_form TODO notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. note_xrefs character vector relevant note record cross-reference identifiers. update_change_dates Whether automatically update change dates updating records. happens record pushed gedcom object. add_creation_dates Whether automatically add creation dates creating records. happens record pushed gedcom object. subm, indi, fam, sour, repo, media, note named list containing character vector representations GEDCOM records. edit parameters directly. xref_prefixes named vector containing alphanumeric string (6 characters long) precede number given identify new records (7 types). vector must particular length specific names. Default value: c(subm = \"U\", indi = \"\", fam = \"F\", sour = \"S\", repo = \"R\", media = \"M\", note = \"N\") order records appear vector also dictate order records appear exported file.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomS7.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM object — GedcomS7","text":"S7 object representing GEDCOM file.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomSource.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM source object — GedcomSource","title":"Create a GEDCOM source object — GedcomSource","text":"Create GEDCOM source object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomSource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM source object — GedcomSource","text":"","code":"GedcomSource(   product_id = character(0),   product_name = character(0),   product_version = character(0),   business_name = character(0),   business_address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   data_name = character(0),   data_pubdate = character(0),   data_pubtime = character(0),   data_copyright = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomSource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GEDCOM source object — GedcomSource","text":"product_id TODO product_name TODO product_version TODO business_name TODO business_address TODO phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. data_name TODO data_pubdate TODO data_pubtime TODO data_copyright TODO","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/GedcomSource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM source object — GedcomSource","text":"S7 object representing GEDCOM HEAD.SOUR.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an individual attribute object — IndividualAttribute","title":"Create an individual attribute object — IndividualAttribute","text":"Create individual attribute object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an individual attribute object — IndividualAttribute","text":"","code":"IndividualAttribute(   fact_type = character(0),   fact_val = character(0),   fact_desc = character(0),   date = character(0),   place = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   agency = character(0),   relig_affil = character(0),   cause = character(0),   confidential = FALSE,   locked = FALSE,   private = FALSE,   date_sort = character(0),   associations = list(),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   unique_ids = character(0),   age = character(0),   age_phrase = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an individual attribute object — IndividualAttribute","text":"fact_type TODO fact_val TODO fact_desc TODO date date given either formatted GEDCOM string, DateValue object. place see territory address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. relig_affil religious denomination associated fact. cause Used special cases record reasons precipitated fact (e.g. cause death). confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. date_sort date given either formatted GEDCOM string, DateSorting object. associations Associated individuals. can either Association object list . note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualAttribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an individual attribute object — IndividualAttribute","text":"S7 object representing GEDCOM INDIVIDUAL_ATTRIBUTE_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualEvent.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an individual event object — IndividualEvent","title":"Create an individual event object — IndividualEvent","text":"Create individual event object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualEvent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an individual event object — IndividualEvent","text":"","code":"IndividualEvent(   fact_type = character(0),   fact_val = character(0),   fact_desc = character(0),   date = character(0),   place = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   agency = character(0),   relig_affil = character(0),   cause = character(0),   confidential = FALSE,   locked = FALSE,   private = FALSE,   date_sort = character(0),   associations = list(),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   unique_ids = character(0),   age = character(0),   age_phrase = character(0),   fam_xref = character(0),   adop_parent = character(0),   adop_parent_phrase = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualEvent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an individual event object — IndividualEvent","text":"fact_type TODO fact_val TODO fact_desc TODO date date given either formatted GEDCOM string, DateValue object. place see territory address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. relig_affil religious denomination associated fact. cause Used special cases record reasons precipitated fact (e.g. cause death). confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. date_sort date given either formatted GEDCOM string, DateSorting object. associations Associated individuals. can either Association object list . note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). fam_xref cross-reference identifier family record. adop_parent TODO adop_parent_phrase TODO","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualEvent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an individual event object — IndividualEvent","text":"S7 object representing GEDCOM INDIVIDUAL_EVENT_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualFact.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an individual fact object — IndividualFact","title":"Create an individual fact object — IndividualFact","text":"Create individual fact object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualFact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an individual fact object — IndividualFact","text":"","code":"IndividualFact(   fact_type = character(0),   fact_val = character(0),   fact_desc = character(0),   date = character(0),   place = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   agency = character(0),   relig_affil = character(0),   cause = character(0),   confidential = FALSE,   locked = FALSE,   private = FALSE,   date_sort = character(0),   associations = list(),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   unique_ids = character(0),   age = character(0),   age_phrase = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualFact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an individual fact object — IndividualFact","text":"fact_type TODO fact_val TODO fact_desc TODO date date given either formatted GEDCOM string, DateValue object. place see territory address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. relig_affil religious denomination associated fact. cause Used special cases record reasons precipitated fact (e.g. cause death). confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. date_sort date given either formatted GEDCOM string, DateSorting object. associations Associated individuals. can either Association object list . note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualFact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an individual fact object — IndividualFact","text":"S7 object representing GEDCOM INDIVIDUAL_EVENT_DETAIL (plus bit ).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an individual record object — IndividualRecord","title":"Create an individual record object — IndividualRecord","text":"Create individual record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an individual record object — IndividualRecord","text":"","code":"IndividualRecord(   xref = \"@ORPHAN@\",   confidential = FALSE,   locked = FALSE,   private = FALSE,   user_ids = character(0),   unique_ids = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   created = NULL,   updated = NULL,   pers_names = list(),   sex = \"U\",   facts = list(),   non_events = list(),   ordinances = list(),   fam_links_chil = list(),   fam_links_spou = list(),   subm_xrefs = character(0),   associations = list(),   alia_xrefs = character(0),   anci_xrefs = character(0),   desi_xrefs = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an individual record object — IndividualRecord","text":"xref cross-reference identifier record. edit maintenance done automatically. confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today. pers_names TODO sex sex individual. Either \"M\" (male), \"F\" (female), \"X\" (), \"U\" (undetermined, default), facts TODO non_events TODO ordinances TODO fam_links_chil TODO fam_links_spou TODO subm_xrefs character vector relevant submitter record cross-reference identifiers. associations Associated individuals. can either Association object list . alia_xrefs named character vector relevant individual record cross-reference identifiers whose records also represent individual. vector names may provide description records. anci_xrefs, desi_xrefs character vector relevant submitter record cross-reference identifiers interested ancestors/descendants individual.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/IndividualRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an individual record object — IndividualRecord","text":"S7 object representing GEDCOM INDIVIDUAL_RECORD.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a media file object — MediaFile","title":"Create a media file object — MediaFile","text":"Create media file object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a media file object — MediaFile","text":"","code":"MediaFile(   location = character(0),   title = character(0),   media_type = character(0),   medium = character(0),   medium_phrase = character(0),   media_alt = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a media file object — MediaFile","text":"location TODO title title multimedia record. supersede title given record. media_type media type defined RFC 2045. medium TODO medium_phrase TODO media_alt named vector media alternative media forms, c(form = location)","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a media file object — MediaFile","text":"S7 object representing GEDCOM multimedia file substructure.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaLink.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a multimedia link object — MediaLink","title":"Create a multimedia link object — MediaLink","text":"Create multimedia link object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaLink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a multimedia link object — MediaLink","text":"","code":"MediaLink(   media_xref = \"@VOID@\",   title = character(0),   top = integer(0),   left = integer(0),   height = integer(0),   width = integer(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaLink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a multimedia link object — MediaLink","text":"media_xref cross-reference identifier multimedia record. title title multimedia record. supersede title given record. top number pixels omit top side image. left number pixels omit left side image. height height pixels cropped region. width width pixels cropped region.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaLink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a multimedia link object — MediaLink","text":"S7 object representing GEDCOM MULTIMEDIA_LINK.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaLink.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a multimedia link object — MediaLink","text":"properties @left @top indicate top left corner region display. properties @width @height indicate dimensions region display. multimedia record contains multiple files, crop parameters applies first file.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a multimedia record object — MediaRecord","title":"Create a multimedia record object — MediaRecord","text":"Create multimedia record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a multimedia record object — MediaRecord","text":"","code":"MediaRecord(   xref = \"@ORPHAN@\",   confidential = FALSE,   locked = FALSE,   private = FALSE,   user_ids = character(0),   unique_ids = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   created = NULL,   updated = NULL,   files = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a multimedia record object — MediaRecord","text":"xref cross-reference identifier record. edit maintenance done automatically. confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links used. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today. files MediaFile object list . refers 1 external digital files. Grouped files pertain context.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/MediaRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a multimedia record object — MediaRecord","text":"S7 object representing GEDCOM MULTIMEDIA_RECORD.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/NonEvent.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a non-event object — NonEvent","title":"Create a non-event object — NonEvent","text":"Create non-event object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/NonEvent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a non-event object — NonEvent","text":"","code":"NonEvent(   event_type = character(0),   date_period = character(0),   date_phrase = character(0),   note_xrefs = character(0),   notes = list(),   citations = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/NonEvent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a non-event object — NonEvent","text":"event_type TODO date_period date period given either formatted GEDCOM string, DatePeriod object. date_phrase Textual information expressed date. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/NonEvent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a non-event object — NonEvent","text":"S7 object representing GEDCOM NON_EVENT_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Note.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a note structure object — Note","title":"Create a note structure object — Note","text":"Create note structure object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Note.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a note structure object — Note","text":"","code":"Note(   text = character(0),   language = character(0),   media_type = character(0),   translations = list(),   citations = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/Note.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a note structure object — Note","text":"text character string. New lines created \\n. language character string language tags defined BCP 47. media_type media type defined RFC 2045. translations TranslationText object list . One alternate translation text. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Note.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a note structure object — Note","text":"S7 object representing GEDCOM NOTE_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Note.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a note structure object — Note","text":"shared note (SNOTE) alternative structure defined separately relevant structures.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/NoteRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a shared note record object — NoteRecord","title":"Create a shared note record object — NoteRecord","text":"Create shared note record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/NoteRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shared note record object — NoteRecord","text":"","code":"NoteRecord(   xref = \"@ORPHAN@\",   confidential = FALSE,   locked = FALSE,   private = FALSE,   user_ids = character(0),   unique_ids = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   created = NULL,   updated = NULL,   text = character(0),   media_type = character(0),   language = character(0),   translations = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/NoteRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shared note record object — NoteRecord","text":"xref cross-reference identifier record. edit maintenance done automatically. confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs used. notes used. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links used. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today. text character string. New lines created \\n. media_type media type defined RFC 2045. language character string language tags defined BCP 47. translations TranslationText object list . One alternate translation text.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/NoteRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a shared note record object — NoteRecord","text":"S7 object representing GEDCOM SHARED_NOTE_RECORD.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Ordinance.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an individual ordinance object — Ordinance","title":"Create an individual ordinance object — Ordinance","text":"Create individual ordinance object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Ordinance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an individual ordinance object — Ordinance","text":"","code":"Ordinance(   ord_type = character(0),   date = character(0),   temple_name = character(0),   place = character(0),   ord_state = character(0),   state_date = character(0),   state_time = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   fam_xref = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/Ordinance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an individual ordinance object — Ordinance","text":"ord_type TODO date date given either formatted GEDCOM string, DateValue object. temple_name TODO place see territory ord_state TODO state_date ordinance date given either formatted GEDCOM string, DateExact object. state_time ordinance time given either formatted GEDCOM string, Time object. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. fam_xref cross-reference identifier family record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Ordinance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an individual ordinance object — Ordinance","text":"S7 object representing GEDCOM LDS_INDIVIDUAL_ORDINANCE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalName.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a personal name object — PersonalName","title":"Create a personal name object — PersonalName","text":"Create personal name object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a personal name object — PersonalName","text":"","code":"PersonalName(   pers_name = character(0),   name_type = character(0),   type_phrase = character(0),   name_pieces = NULL,   name_translations = list(),   notes = list(),   note_xrefs = character(0),   citations = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a personal name object — PersonalName","text":"pers_name TODO name_type TODO type_phrase TODO name_pieces PersonalNamePieces object defining pieces full name. name_translations TODO notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. note_xrefs character vector relevant note record cross-reference identifiers. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a personal name object — PersonalName","text":"S7 object representing GEDCOM PERSONAL_NAME_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalNamePieces.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a name pieces object — PersonalNamePieces","title":"Create a name pieces object — PersonalNamePieces","text":"Create name pieces object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalNamePieces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a name pieces object — PersonalNamePieces","text":"","code":"PersonalNamePieces(   prefix = character(0),   given = character(0),   nickname = character(0),   surname_prefix = character(0),   surname = character(0),   suffix = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalNamePieces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a name pieces object — PersonalNamePieces","text":"prefix name prefix, e.g. Cmdr. given given name earned name. nickname descriptive familiar name used instead , addition , one’s proper name. surname_prefix Surname prefix article used family name. example name \"de la Cruz\", value \"de la\". surname Surname family name. suffix Name piece appears given name surname parts, e.g. Jr.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalNamePieces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a name pieces object — PersonalNamePieces","text":"S7 object representing GEDCOM PERSONAL_NAME_PIECES.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalNameTran.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a name translation object — PersonalNameTran","title":"Create a name translation object — PersonalNameTran","text":"Create name translation object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalNameTran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a name translation object — PersonalNameTran","text":"","code":"PersonalNameTran(   pers_name = character(0),   language = character(0),   name_pieces = NULL )"},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalNameTran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a name translation object — PersonalNameTran","text":"pers_name TODO language character string language tags defined BCP 47. name_pieces PersonalNamePieces object defining pieces full name.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/PersonalNameTran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a name translation object — PersonalNameTran","text":"S7 object representing GEDCOM personal name translation substructure.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Place.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a place structure object — Place","title":"Create a place structure object — Place","text":"Create place structure object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Place.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a place structure object — Place","text":"","code":"Place(   place_name = character(0),   place_form = character(0),   language = character(0),   place_translations = character(0),   lat_long = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/Place.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a place structure object — Place","text":"place_name comma-separated string region names, ordered smallest largest. specific meaning element given @place_form, @default_place_form gedcom object @place_form defined. Elements left blank unknown, apply location, specific region question. example \"Baltimore, , Maryland, USA\". place_form comma-separated string jurisdictional titles, number elements @place_form. example \"City, County, State, Country\". language character string language tags defined BCP 47. place_translations named character vector translations place name. vector values must follow form @place_name vector names must language value defined @language. lat_long latitude longitude place, separated space. latitude coordinate direction North South equator degrees fraction degrees. longitude coordinate degrees fraction degrees East West zero base meridian coordinate. example: 18 degrees, 9 minutes, 3.4 seconds North, 168 degrees, 9 minutes, 3.4 seconds East formatted \"N18.150944 E168.150944\". ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Place.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a place structure object — Place","text":"S7 object representing GEDCOM PLACE_STRUCTURE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Record.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a base record object — Record","title":"Create a base record object — Record","text":"Create base record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a base record object — Record","text":"","code":"Record(   xref = \"@ORPHAN@\",   confidential = FALSE,   locked = FALSE,   private = FALSE,   user_ids = character(0),   unique_ids = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   created = NULL,   updated = NULL )"},{"path":"https://jl5000.github.io/gedcomS7/reference/Record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a base record object — Record","text":"xref cross-reference identifier record. edit maintenance done automatically. confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a base record object — Record","text":"S7 object containing common elements GEDCOM record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/RepositoryCitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a repository citation object — RepositoryCitation","title":"Create a repository citation object — RepositoryCitation","text":"Create repository citation object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/RepositoryCitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a repository citation object — RepositoryCitation","text":"","code":"RepositoryCitation(   repo_xref = \"@VOID@\",   notes = list(),   note_xrefs = character(0),   call_numbers = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/RepositoryCitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a repository citation object — RepositoryCitation","text":"repo_xref cross-reference identifier repository record. repository record, can left blank value \"@VOID@\" used. However, describe repository @notes. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. note_xrefs character vector relevant note record cross-reference identifiers. call_numbers Call number(s) used file retrieve items repository. can either SourceCallNumber object, list , character vector call numbers. character vector provided call numbers can recorded (associated medium). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/RepositoryCitation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a repository citation object — RepositoryCitation","text":"S7 object representing GEDCOM SOURCE_REPOSITORY_CITATION.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/RepositoryRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a repository record object — RepositoryRecord","title":"Create a repository record object — RepositoryRecord","text":"Create repository record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/RepositoryRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a repository record object — RepositoryRecord","text":"","code":"RepositoryRecord(   xref = \"@ORPHAN@\",   confidential = FALSE,   locked = FALSE,   private = FALSE,   user_ids = character(0),   unique_ids = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   created = NULL,   updated = NULL,   repo_name = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/RepositoryRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a repository record object — RepositoryRecord","text":"xref cross-reference identifier record. edit maintenance done automatically. confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations used. media_links used. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today. repo_name name repository. address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/RepositoryRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a repository record object — RepositoryRecord","text":"S7 object representing GEDCOM REPOSITORY_RECORD.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceCallNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a source call number object — SourceCallNumber","title":"Create a source call number object — SourceCallNumber","text":"Create source call number object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceCallNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a source call number object — SourceCallNumber","text":"","code":"SourceCallNumber(   call_number = character(0),   medium = character(0),   medium_phrase = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceCallNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a source call number object — SourceCallNumber","text":"call_number call number. medium TODO medium_phrase TODO","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceCallNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a source call number object — SourceCallNumber","text":"S7 object representing CALN substructure GEDCOM SOURCE_REPOSITORY_CITATION.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceCitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a source citation object — SourceCitation","title":"Create a source citation object — SourceCitation","text":"Create source citation object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceCitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a source citation object — SourceCitation","text":"","code":"SourceCitation(   sour_xref = \"@VOID@\",   where = character(0),   date = character(0),   source_text = list(),   fact_type = character(0),   fact_phrase = character(0),   role = character(0),   role_phrase = character(0),   certainty = character(0),   media_links = list(),   note_xrefs = character(0),   notes = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceCitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a source citation object — SourceCitation","text":"sour_xref cross-reference identifier source record. source record, can left blank value \"@VOID@\" used. However, describe source @. specific location within information referenced. published work, include volume multi-volume work page number numbers. periodical, include volume, issue, page numbers. newspaper, include date, page number, column number. unpublished source micro‐ filmed works, film sheet number, page number, frame number. census record might enumerating district, page number, line number, dwelling number, family number. recommended data field formatted comma-separated label: value pairs date date given either formatted GEDCOM string, DateValue object. source_text verbatim copy description contained within source. can either TranslationText object, list , character vector text. TranslationText objects provided, forced define associated language media type. fact_type TODO fact_phrase Textual information expressed fact type. role role person played fact. role_phrase Textual information expressed role. certainty enumerated value indicating credibility piece information, based supporting evidence. systems use feature rank multiple conflicting opinions display likely information first. intended eliminate receivers’ need evaluate evidence . \"0\" = unreliable/estimated data \"1\" = Questionable reliability evidence \"2\" = Secondary evidence, data officially recorded sometime event \"3\" = Direct primary evidence used, dominance evidence media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceCitation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a source citation object — SourceCitation","text":"S7 object representing GEDCOM SOURCE_CITATION.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a source record object — SourceRecord","title":"Create a source record object — SourceRecord","text":"Create source record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a source record object — SourceRecord","text":"","code":"SourceRecord(   xref = \"@ORPHAN@\",   confidential = FALSE,   locked = FALSE,   private = FALSE,   user_ids = character(0),   unique_ids = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   created = NULL,   updated = NULL,   facts_recorded = list(),   agency = character(0),   data_note_xrefs = character(0),   data_notes = list(),   originator = character(0),   full_title = character(0),   short_title = character(0),   publication_facts = character(0),   source_text = list(),   repo_citations = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a source record object — SourceRecord","text":"xref cross-reference identifier record. edit maintenance done automatically. confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations used. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today. facts_recorded facts recorded source. can either FactsRecorded object, list , character vector comma-delimited fact types. character vector provided fact types can recorded (associated information). option easier associated information required. example, parish register births, deaths, marriages \"BIRT, DEAT, MARR\". val_fact_types() function gives list possible fact types. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. data_note_xrefs character vector note record cross-reference identifiers relevant source data. data_notes Associated notes source data. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. originator person, agency, entity created record. published work, author, compiler, transcriber, abstractor, editor. unpublished source, may individual, government agency, church organization, private organization. full_title full title source. short_title shortened name source used sorting, filing, retrieving records. publication_facts record created. published works, includes information city publication, name publisher, year publication. source_text verbatim copy description contained within source. can either TranslationText object, list , character vector text. TranslationText objects provided, forced define associated language media type. repo_citations Associated repositories. can either RepositoryCitation object, list , character vector XREFs repository records. character vector provided XREFs can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SourceRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a source record object — SourceRecord","text":"S7 object representing GEDCOM SOURCE_RECORD.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SpouseSealing.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a spouse sealing object — SpouseSealing","title":"Create a spouse sealing object — SpouseSealing","text":"Create spouse sealing object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SpouseSealing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a spouse sealing object — SpouseSealing","text":"","code":"SpouseSealing(   date = character(0),   temple_name = character(0),   place = character(0),   ord_state = character(0),   state_date = character(0),   state_time = character(0),   note_xrefs = character(0),   notes = list(),   citations = list() )"},{"path":"https://jl5000.github.io/gedcomS7/reference/SpouseSealing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a spouse sealing object — SpouseSealing","text":"date date given either formatted GEDCOM string, DateValue object. temple_name TODO place see territory ord_state TODO state_date ordinance date given either formatted GEDCOM string, DateExact object. state_time ordinance time given either formatted GEDCOM string, Time object. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SpouseSealing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a spouse sealing object — SpouseSealing","text":"S7 object representing GEDCOM LDS_SPOUSE_SEALING.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SubmitterRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a submitter record object — SubmitterRecord","title":"Create a submitter record object — SubmitterRecord","text":"Create submitter record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SubmitterRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a submitter record object — SubmitterRecord","text":"","code":"SubmitterRecord(   xref = \"@ORPHAN@\",   confidential = FALSE,   locked = FALSE,   private = FALSE,   user_ids = character(0),   unique_ids = character(0),   ext_ids = character(0),   note_xrefs = character(0),   notes = list(),   citations = list(),   media_links = list(),   created = NULL,   updated = NULL,   subm_name = character(0),   address = character(0),   phone_numbers = character(0),   emails = character(0),   faxes = character(0),   web_pages = character(0),   languages = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/SubmitterRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a submitter record object — SubmitterRecord","text":"xref cross-reference identifier record. edit maintenance done automatically. confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. note_xrefs character vector relevant note record cross-reference identifiers. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations used. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today. subm_name name submitter. address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. languages character vector language tags defined BCP 47.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/SubmitterRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a submitter record object — SubmitterRecord","text":"S7 object representing GEDCOM SUBMITTER_RECORD.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Time.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a time object — Time","title":"Create a time object — Time","text":"Create time object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a time object — Time","text":"","code":"Time(   hour = integer(0),   minute = integer(0),   second = integer(0),   fraction = integer(0),   utc = TRUE )"},{"path":"https://jl5000.github.io/gedcomS7/reference/Time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a time object — Time","text":"hour hour day given integer 0 23. minute minute hour given integer 0 59. second second minute given integer 0 59. fraction fraction second given integer. utc Whether time Coordinated Universal Time (UTC) (TRUE, default) local time (FALSE).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/Time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a time object — Time","text":"S7 object representing GEDCOM time.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/TranslationText.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a text translation object — TranslationText","title":"Create a text translation object — TranslationText","text":"Create text translation object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/TranslationText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a text translation object — TranslationText","text":"","code":"TranslationText(   text = character(0),   language = character(0),   media_type = character(0) )"},{"path":"https://jl5000.github.io/gedcomS7/reference/TranslationText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a text translation object — TranslationText","text":"text character string. New lines created \\n. language character string language tags defined BCP 47. media_type media type defined RFC 2045.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/TranslationText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a text translation object — TranslationText","text":"S7 object representing GEDCOM text translation substructure.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_children.html","id":null,"dir":"Reference","previous_headings":"","what":"Create multiple children for a Family — add_children","title":"Create multiple children for a Family — add_children","text":"Create multiple children Family","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create multiple children for a Family — add_children","text":"","code":"add_children(x, xref, sexes, chil_names = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/add_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create multiple children for a Family — add_children","text":"x gedcom object. xref xref Family record. sexes character string giving sexes child. example, \"FFM\" add two daughters one son. chil_names character vector children's names. provided, must length number sexes. want provide name child, set name \"\". Surnames must enclosed forward slashes. names supply contain forward slashes surnames taken father (mother).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create multiple children for a Family — add_children","text":"gedcom object additional child records.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Add parent records for an individual — add_parents","title":"Add parent records for an individual — add_parents","text":"function adds records individual's parents.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add parent records for an individual — add_parents","text":"","code":"add_parents(x, xref, inc_sex = TRUE, fath_name = NULL, moth_name = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/add_parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add parent records for an individual — add_parents","text":"x gedcom object. xref xref Individual record. inc_sex Whether populate sex parents. ensure one male one female parent. Otherwise sex assigned \"U\" (undetermined). fath_name, moth_name Optional names give parents. Surnames must enclosed forward slashes.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add parent records for an individual — add_parents","text":"gedcom object additional parent records.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_parents.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add parent records for an individual — add_parents","text":"function may also create Family record modify existing parents.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_siblings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create siblings for an Individual — add_siblings","title":"Create siblings for an Individual — add_siblings","text":"Create siblings Individual","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_siblings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create siblings for an Individual — add_siblings","text":"","code":"add_siblings(x, xref, sexes, sib_names = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/add_siblings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create siblings for an Individual — add_siblings","text":"x gedcom object. xref xref Individual record. sexes character string giving sexes sibling. example, \"FFM\" add two sisters one brother. sib_names character vector sibling's names. provided, must length number sexes. want provide name sibling, set name \"\". Surnames must enclosed forward slashes. names supply contain forward slashes surnames taken father (mother).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_siblings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create siblings for an Individual — add_siblings","text":"gedcom object additional sibling records.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_siblings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create siblings for an Individual — add_siblings","text":"function may also create Family record modify existing siblings.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_spouse.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a spouse for an individual — add_spouse","title":"Add a spouse for an individual — add_spouse","text":"creates record spouse Family record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_spouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a spouse for an individual — add_spouse","text":"","code":"add_spouse(x, xref, sex = \"U\", spou_name = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/add_spouse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a spouse for an individual — add_spouse","text":"x gedcom object. xref xref Individual record. sex sex spouse. spou_name Optional name give spouse. Surnames must enclosed forward slashes.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/add_spouse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a spouse for an individual — add_spouse","text":"gedcom object additional spouse Family Group records.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/check_for_xref_mentions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check gedcom lines for inappropriate mentions of xrefs — check_for_xref_mentions","title":"Check gedcom lines for inappropriate mentions of xrefs — check_for_xref_mentions","text":"Check gedcom lines inappropriate mentions xrefs","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/check_for_xref_mentions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check gedcom lines for inappropriate mentions of xrefs — check_for_xref_mentions","text":"","code":"check_for_xref_mentions(lines)"},{"path":"https://jl5000.github.io/gedcomS7/reference/check_for_xref_mentions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check gedcom lines for inappropriate mentions of xrefs — check_for_xref_mentions","text":"lines character vector gedcom lines.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/check_for_xref_mentions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check gedcom lines for inappropriate mentions of xrefs — check_for_xref_mentions","text":"Nothing. applicable, function result warning inappropriate mentions xrefs found.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_S7classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a list to ensure it contains elements of the correct S7 class — chk_input_S7classes","title":"Validate a list to ensure it contains elements of the correct S7 class — chk_input_S7classes","text":"Validate list ensure contains elements correct S7 class","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_S7classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a list to ensure it contains elements of the correct S7 class — chk_input_S7classes","text":"","code":"chk_input_S7classes(input, target_class, backup_pattern = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_S7classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a list to ensure it contains elements of the correct S7 class — chk_input_S7classes","text":"input input. target_class S7 class elements list contain. backup_pattern Need handle List mixed stuff vs character vector vs list characters","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_S7classes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a list to ensure it contains elements of the correct S7 class — chk_input_S7classes","text":"Either character string giving error message, NULL.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate an input against a set of valid values. — chk_input_choice","title":"Validate an input against a set of valid values. — chk_input_choice","text":"Validate input set valid values.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate an input against a set of valid values. — chk_input_choice","text":"","code":"chk_input_choice(input, choices)"},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_choice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate an input against a set of valid values. — chk_input_choice","text":"input input. choices vector valid values.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_choice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate an input against a set of valid values. — chk_input_choice","text":"Either character string giving error message, NULL.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_date_cpts.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a date by its components — chk_input_date_cpts","title":"Validate a date by its components — chk_input_date_cpts","text":"Validate date components","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_date_cpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a date by its components — chk_input_date_cpts","text":"","code":"chk_input_date_cpts(year, month, day, bce = FALSE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_date_cpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a date by its components — chk_input_date_cpts","text":"year year. month month. day day. bce Whether date occurs common era.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_date_cpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a date by its components — chk_input_date_cpts","text":"Either character string giving error message, NULL.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a date range/period — chk_input_dates","title":"Validate a date range/period — chk_input_dates","text":"Validate date range/period","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a date range/period — chk_input_dates","text":"","code":"chk_input_dates(start_date, end_date)"},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a date range/period — chk_input_dates","text":"start_date start date given either DateGregorian GEDCOM date string. end_date end date given either DateGregorian GEDCOM date string.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a date range/period — chk_input_dates","text":"Either character string giving error message, NULL.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the existence of an input's parent value — chk_input_parents","title":"Validate the existence of an input's parent value — chk_input_parents","text":"Validate existence input's parent value","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the existence of an input's parent value — chk_input_parents","text":"","code":"chk_input_parents(input, name, parent, parent_name)"},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the existence of an input's parent value — chk_input_parents","text":"input input. name input name. parent parent input. parent_name name parent input used error messages.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the existence of an input's parent value — chk_input_parents","text":"Either character string giving error message, NULL.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the regex pattern(s) of a character vector — chk_input_pattern","title":"Validate the regex pattern(s) of a character vector — chk_input_pattern","text":"Validate regex pattern(s) character vector","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the regex pattern(s) of a character vector — chk_input_pattern","text":"","code":"chk_input_pattern(input, pattern)"},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the regex pattern(s) of a character vector — chk_input_pattern","text":"input input. pattern regex pattern element must match.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the regex pattern(s) of a character vector — chk_input_pattern","text":"Either character string giving error message, NULL.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the size of an input — chk_input_size","title":"Validate the size of an input — chk_input_size","text":"Validate size input","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the size of an input — chk_input_size","text":"","code":"chk_input_size(   input,   min_len = NULL,   max_len = NULL,   min_val = NULL,   max_val = NULL )"},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the size of an input — chk_input_size","text":"input input. min_len minimum number elements input . max_len maximum number elements input . min_val minimum number characters value input (depending input type). max_val maximum number characters value input (depending input type).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_input_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the size of an input — chk_input_size","text":"Either character string giving error message, NULL.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_whole_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate an numeric input to be a whole number — chk_whole_number","title":"Validate an numeric input to be a whole number — chk_whole_number","text":"Validate numeric input whole number","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_whole_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate an numeric input to be a whole number — chk_whole_number","text":"","code":"chk_whole_number(input)"},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_whole_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate an numeric input to be a whole number — chk_whole_number","text":"input input.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chk_whole_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate an numeric input to be a whole number — chk_whole_number","text":"Either character string giving error message, NULL.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chronify.html","id":null,"dir":"Reference","previous_headings":"","what":"Force a vector to be a length 1 character vector — chronify","title":"Force a vector to be a length 1 character vector — chronify","text":"name comes 'Chr-one-ify'.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chronify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Force a vector to be a length 1 character vector — chronify","text":"","code":"chronify(x)"},{"path":"https://jl5000.github.io/gedcomS7/reference/chronify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Force a vector to be a length 1 character vector — chronify","text":"x atomic vector length.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/chronify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Force a vector to be a length 1 character vector — chronify","text":"character vector length one. either empty string zero length input, takes value first element.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/combine_cont_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine continuation lines into the parent line — combine_cont_lines","title":"Combine continuation lines into the parent line — combine_cont_lines","text":"Combine continuation lines parent line","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/combine_cont_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine continuation lines into the parent line — combine_cont_lines","text":"","code":"combine_cont_lines(lines)"},{"path":"https://jl5000.github.io/gedcomS7/reference/combine_cont_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine continuation lines into the parent line — combine_cont_lines","text":"lines character vector gedcom lines.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/combine_cont_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine continuation lines into the parent line — combine_cont_lines","text":"new character vector gedcom lines.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/date_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the number of years between two dates — date_diff","title":"Determine the number of years between two dates — date_diff","text":"Determine number years two dates","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/date_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the number of years between two dates — date_diff","text":"","code":"date_diff(date1, date2 = date_exact_current()@c_as_val, minimise = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/date_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the number of years between two dates — date_diff","text":"date1 GEDCOM date string. date2 GEDCOM date string. date given, today's date used. minimise date ranges periods used dates, whether choose bounds assume minimum date difference. FALSE, maximum date difference assumed.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/date_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the number of years between two dates — date_diff","text":"numeric value giving number years. numeric value less zero means determination made.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/date_exact_current.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GEDCOM Exact Date object for today — date_exact_current","title":"Create a GEDCOM Exact Date object for today — date_exact_current","text":"Create GEDCOM Exact Date object today","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/date_exact_current.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GEDCOM Exact Date object for today — date_exact_current","text":"","code":"date_exact_current()"},{"path":"https://jl5000.github.io/gedcomS7/reference/date_exact_current.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GEDCOM Exact Date object for today — date_exact_current","text":"S7 object representing GEDCOM Exact Date today.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/delete_ged_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a structure from GEDCOM lines — delete_ged_section","title":"Delete a structure from GEDCOM lines — delete_ged_section","text":"Delete structure GEDCOM lines","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/delete_ged_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a structure from GEDCOM lines — delete_ged_section","text":"","code":"delete_ged_section(lines, line_no, containing_line = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/delete_ged_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a structure from GEDCOM lines — delete_ged_section","text":"lines character vector GEDCOM lines. line_no line number structure located. containing_line Whether line number first line structure whether line number references line within structure (one level lower).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/delete_ged_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a structure from GEDCOM lines — delete_ged_section","text":"character vector GEDCOM lines without structure referenced line_no. structure entire record, xref pointers also replaced VOID pointer.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_fam_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a family's attributes/events in a dataframe — df_fam_facts","title":"Summarise a family's attributes/events in a dataframe — df_fam_facts","text":"Summarise family's attributes/events dataframe","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_fam_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a family's attributes/events in a dataframe — df_fam_facts","text":"","code":"df_fam_facts(x, xref)"},{"path":"https://jl5000.github.io/gedcomS7/reference/df_fam_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a family's attributes/events in a dataframe — df_fam_facts","text":"x gedcom object. xref cross-reference identifier family record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_fam_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a family's attributes/events in a dataframe — df_fam_facts","text":"dataframe summarising attribute/event row.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_indi.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise records of a particular type in a dataframe — df_indi","title":"Summarise records of a particular type in a dataframe — df_indi","text":"Summarise records particular type dataframe","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_indi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise records of a particular type in a dataframe — df_indi","text":"","code":"df_indi(x)  df_fam(x)  df_sour(x)  df_repo(x)  df_media(x)  df_note(x)  df_subm(x)"},{"path":"https://jl5000.github.io/gedcomS7/reference/df_indi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise records of a particular type in a dataframe — df_indi","text":"x gedcom object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_indi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise records of a particular type in a dataframe — df_indi","text":"dataframe summarising record row.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_indi_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise an individual's attributes/events in a dataframe — df_indi_facts","title":"Summarise an individual's attributes/events in a dataframe — df_indi_facts","text":"Summarise individual's attributes/events dataframe","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_indi_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise an individual's attributes/events in a dataframe — df_indi_facts","text":"","code":"df_indi_facts(x, xref)"},{"path":"https://jl5000.github.io/gedcomS7/reference/df_indi_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise an individual's attributes/events in a dataframe — df_indi_facts","text":"x gedcom object. xref cross-reference identifier individual record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/df_indi_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise an individual's attributes/events in a dataframe — df_indi_facts","text":"dataframe summarising attribute/event row.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_ancestors.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all ancestors for an individual — get_ancestors","title":"Identify all ancestors for an individual — get_ancestors","text":"function identifies records entire branch family tree certain individual.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_ancestors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all ancestors for an individual — get_ancestors","text":"","code":"get_ancestors(   x,   xref,   inc_indi = FALSE,   inc_sibs = FALSE,   inc_fam = FALSE,   inc_supp = FALSE,   pedigrees = NULL )"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_ancestors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all ancestors for an individual — get_ancestors","text":"x gedcom object. xref xref Individual record. inc_indi Whether also include individual . inc_sibs Whether also include siblings ancestors (siblings individual included individual included). inc_fam Whether also include Family Group records individual child (ancestors' Family Group records). inc_supp Whether also include supporting records (Note, Source, Repository, Multimedia). pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_ancestors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all ancestors for an individual — get_ancestors","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_descendants.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all descendants for an individual — get_descendants","title":"Identify all descendants for an individual — get_descendants","text":"function identifies records entire branch family tree certain individual.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_descendants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all descendants for an individual — get_descendants","text":"","code":"get_descendants(   x,   xref,   inc_indi = FALSE,   inc_part = FALSE,   inc_fam = FALSE,   inc_supp = FALSE,   pedigrees = NULL )"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_descendants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all descendants for an individual — get_descendants","text":"x gedcom object. xref xref Individual record. inc_indi Whether also include individual . inc_part Whether also include partners individual (descendants descendants' partners). inc_fam Whether also include Family Group records individual partner (descendants' Family Group records). inc_supp Whether also include supporting records (Note, Source, Repository, Multimedia). pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_descendants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all descendants for an individual — get_descendants","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_as_child.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all families for an individual where they are a child — get_fam_as_child","title":"Identify all families for an individual where they are a child — get_fam_as_child","text":"Identify families individual child","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_as_child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all families for an individual where they are a child — get_fam_as_child","text":"","code":"get_fam_as_child(x, xref, pedigrees = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_as_child.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all families for an individual where they are a child — get_fam_as_child","text":"x gedcom object. xref xref Individual record. pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_as_child.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all families for an individual where they are a child — get_fam_as_child","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_as_spouse.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all families for an individual where they are a partner — get_fam_as_spouse","title":"Identify all families for an individual where they are a partner — get_fam_as_spouse","text":"Identify families individual partner","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_as_spouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all families for an individual where they are a partner — get_fam_as_spouse","text":"","code":"get_fam_as_spouse(x, xref)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_as_spouse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all families for an individual where they are a partner — get_fam_as_spouse","text":"x gedcom object. xref xref Individual record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_as_spouse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all families for an individual where they are a partner — get_fam_as_spouse","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_children.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all children in a Family Group — get_fam_children","title":"Identify all children in a Family Group — get_fam_children","text":"Identify children Family Group","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all children in a Family Group — get_fam_children","text":"","code":"get_fam_children(x, xref, pedigrees = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all children in a Family Group — get_fam_children","text":"x gedcom object. xref xref Family Group record. pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all children in a Family Group — get_fam_children","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_partners.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all partners in a Family Group — get_fam_partners","title":"Identify all partners in a Family Group — get_fam_partners","text":"Identify partners Family Group","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_partners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all partners in a Family Group — get_fam_partners","text":"","code":"get_fam_partners(x, xref)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_partners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all partners in a Family Group — get_fam_partners","text":"x gedcom object. xref xref Family Group record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_fam_partners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all partners in a Family Group — get_fam_partners","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_children.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all children for an individual — get_indi_children","title":"Identify all children for an individual — get_indi_children","text":"Identify children individual","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all children for an individual — get_indi_children","text":"","code":"get_indi_children(x, xref, pedigrees = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all children for an individual — get_indi_children","text":"x gedcom object. xref xref Individual record. pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all children for an individual — get_indi_children","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_cousins.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all cousins for an individual — get_indi_cousins","title":"Identify all cousins for an individual — get_indi_cousins","text":"Identify cousins individual","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_cousins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all cousins for an individual — get_indi_cousins","text":"","code":"get_indi_cousins(x, xref, degree = 1, inc_half = FALSE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_cousins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all cousins for an individual — get_indi_cousins","text":"x gedcom object. xref xref Individual record. degree Whether return first cousins (degree = 1), second cousins (degree = 2), etc. inc_half Whether include half cousins.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_cousins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all cousins for an individual — get_indi_cousins","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_fathers.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all fathers for an individual — get_indi_fathers","title":"Identify all fathers for an individual — get_indi_fathers","text":"Identify fathers individual","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_fathers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all fathers for an individual — get_indi_fathers","text":"","code":"get_indi_fathers(x, xref, pedigrees = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_fathers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all fathers for an individual — get_indi_fathers","text":"x gedcom object. xref xref Individual record. pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_fathers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all fathers for an individual — get_indi_fathers","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_mothers.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all mothers for an individual — get_indi_mothers","title":"Identify all mothers for an individual — get_indi_mothers","text":"Identify mothers individual","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_mothers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all mothers for an individual — get_indi_mothers","text":"","code":"get_indi_mothers(x, xref, pedigrees = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_mothers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all mothers for an individual — get_indi_mothers","text":"x gedcom object. xref xref Individual record. pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_mothers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all mothers for an individual — get_indi_mothers","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all parents for an individual — get_indi_parents","title":"Identify all parents for an individual — get_indi_parents","text":"Identify parents individual","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all parents for an individual — get_indi_parents","text":"","code":"get_indi_parents(x, xref, pedigrees = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all parents for an individual — get_indi_parents","text":"x gedcom object. xref xref Individual record. pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all parents for an individual — get_indi_parents","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_partners.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all partners for an individual — get_indi_partners","title":"Identify all partners for an individual — get_indi_partners","text":"Identify partners individual","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_partners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all partners for an individual — get_indi_partners","text":"","code":"get_indi_partners(x, xref)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_partners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all partners for an individual — get_indi_partners","text":"x gedcom object. xref xref Individual record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_partners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all partners for an individual — get_indi_partners","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_siblings.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all siblings for an individual — get_indi_siblings","title":"Identify all siblings for an individual — get_indi_siblings","text":"Identify siblings individual","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_siblings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all siblings for an individual — get_indi_siblings","text":"","code":"get_indi_siblings(x, xref, pedigrees = NULL, inc_half = FALSE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_siblings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all siblings for an individual — get_indi_siblings","text":"x gedcom object. xref xref Individual record. pedigrees character vector allowed family-child linkages. default, NULL means pedigrees (e.g. inc. ADOPTED). includes \"BIRTH\" also pick non-existent values (since BIRTH assumed default). inc_half Whether include siblings share one parent.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_indi_siblings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all siblings for an individual — get_indi_siblings","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_supporting_recs.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all supporting records for a set of records — get_supporting_recs","title":"Identify all supporting records for a set of records — get_supporting_recs","text":"function gets supporting records (onwards dependencies) set records. Supporting records note, multimedia, source, repository records, .e. providing supporting evidence comments.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_supporting_recs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all supporting records for a set of records — get_supporting_recs","text":"","code":"get_supporting_recs(   x,   xrefs,   inc_note = TRUE,   inc_media = TRUE,   inc_sour = TRUE,   inc_repo = TRUE )"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_supporting_recs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all supporting records for a set of records — get_supporting_recs","text":"x gedcom object. xrefs xrefs records get supporting records . inc_note Whether include Note records. inc_media Whether include Multimedia records. inc_sour Whether include Source records. inc_repo Whether include Repository records.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_supporting_recs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all supporting records for a set of records — get_supporting_recs","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_unused_recs.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify unreferenced records — get_unused_recs","title":"Identify unreferenced records — get_unused_recs","text":"function identifies records referenced records.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_unused_recs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify unreferenced records — get_unused_recs","text":"","code":"get_unused_recs(x)"},{"path":"https://jl5000.github.io/gedcomS7/reference/get_unused_recs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify unreferenced records — get_unused_recs","text":"x gedcom object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_unused_recs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify unreferenced records — get_unused_recs","text":"character vector xrefs.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/get_unused_recs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify unreferenced records — get_unused_recs","text":"expect every record referenced another way. example, Individual records reference Family Group records (vice-versa), Repository records referenced Source records, Source records cited records.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/increase_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase the level of a vector of GEDCOM lines — increase_level","title":"Increase the level of a vector of GEDCOM lines — increase_level","text":"Increase level vector GEDCOM lines","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/increase_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase the level of a vector of GEDCOM lines — increase_level","text":"","code":"increase_level(ged, by = 1)"},{"path":"https://jl5000.github.io/gedcomS7/reference/increase_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase the level of a vector of GEDCOM lines — increase_level","text":"ged character vector GEDCOM lines. number levels increment.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/increase_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase the level of a vector of GEDCOM lines — increase_level","text":"vector GEDCOM lines incremented levels.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/lookups.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup values — val_record_types","title":"Lookup values — val_record_types","text":"Lookup values","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/lookups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup values — val_record_types","text":"","code":"val_record_types()  val_adoptive_parents()  val_individual_attribute_types(inc_generic = FALSE)  val_individual_event_types(inc_generic = FALSE)  val_family_event_types(inc_generic = FALSE)  val_family_attribute_types(inc_generic = FALSE)  val_event_types(inc_generic = FALSE)  val_attribute_types(inc_generic = FALSE)  val_fact_types(inc_generic = FALSE)  val_individual_ordinance_types()  val_family_ordinance_types()  val_ordinance_states(ord_type)  val_medium_types()  val_pedigree_types()  val_certainty()  val_restriction()  val_roles()  val_sexes()  val_confidence_types()  val_name_types()"},{"path":"https://jl5000.github.io/gedcomS7/reference/lookups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup values — val_record_types","text":"inc_generic Whether include generic facts. ord_type One values val_individual_ordinance_types() val_family_ordinance_types().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/lookups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup values — val_record_types","text":"vector allowed values.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/new_gedcom.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new gedcom object — new_gedcom","title":"Create a new gedcom object — new_gedcom","text":"Create new gedcom object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/new_gedcom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new gedcom object — new_gedcom","text":"","code":"new_gedcom(my_language = \"en\")"},{"path":"https://jl5000.github.io/gedcomS7/reference/new_gedcom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new gedcom object — new_gedcom","text":"my_language primary language data stored. language code adhere BCP 47.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/new_gedcom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new gedcom object — new_gedcom","text":"minimal gedcom S7 object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/obj_to_ged.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an input into a vector of GEDCOM lines — obj_to_ged","title":"Convert an input into a vector of GEDCOM lines — obj_to_ged","text":"Convert input vector GEDCOM lines","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/obj_to_ged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an input into a vector of GEDCOM lines — obj_to_ged","text":"","code":"obj_to_ged(obj, tag = NULL)"},{"path":"https://jl5000.github.io/gedcomS7/reference/obj_to_ged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an input into a vector of GEDCOM lines — obj_to_ged","text":"obj Either atomic vector, S7 class object, list. S7 class objects must c_as_ged() method. tag obj contains atomic elements, specify tag recorded .","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/obj_to_ged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an input into a vector of GEDCOM lines — obj_to_ged","text":"vector GEDCOM lines.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_common_record_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse common elements into a record object — parse_common_record_elements","title":"Parse common elements into a record object — parse_common_record_elements","text":"Parse common elements record object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_common_record_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse common elements into a record object — parse_common_record_elements","text":"","code":"parse_common_record_elements(rec, rec_lines)"},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_common_record_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse common elements into a record object — parse_common_record_elements","text":"rec S7 record object. rec_lines character vector lines GEDCOM record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_common_record_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse common elements into a record object — parse_common_record_elements","text":"S7 record object common elements added properties.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_gedcom_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a GEDCOM age at event into decimalised years — parse_gedcom_age","title":"Convert a GEDCOM age at event into decimalised years — parse_gedcom_age","text":"Convert GEDCOM age event decimalised years","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_gedcom_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a GEDCOM age at event into decimalised years — parse_gedcom_age","text":"","code":"parse_gedcom_age(age_string)"},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_gedcom_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a GEDCOM age at event into decimalised years — parse_gedcom_age","text":"age_string string describing age event, e.g. \"14y 3m 1w 2d\".","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_gedcom_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a GEDCOM age at event into decimalised years — parse_gedcom_age","text":"numeric value giving age years.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_gedcom_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a GEDCOM date into a date object — parse_gedcom_date","title":"Convert a GEDCOM date into a date object — parse_gedcom_date","text":"Convert GEDCOM date date object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_gedcom_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a GEDCOM date into a date object — parse_gedcom_date","text":"","code":"parse_gedcom_date(date_string, minimise = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_gedcom_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a GEDCOM date into a date object — parse_gedcom_date","text":"date_string GEDCOM date value string. minimise Whether fill missing date pieces date minimised. example, month given, January used. minimise = FALSE, December used.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/parse_gedcom_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a GEDCOM date into a date object — parse_gedcom_date","text":"date.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/prepare_gedcom_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare GEDCOM lines for export — prepare_gedcom_lines","title":"Prepare GEDCOM lines for export — prepare_gedcom_lines","text":"Prepare GEDCOM lines export","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/prepare_gedcom_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare GEDCOM lines for export — prepare_gedcom_lines","text":"","code":"prepare_gedcom_lines(lines)"},{"path":"https://jl5000.github.io/gedcomS7/reference/prepare_gedcom_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare GEDCOM lines for export — prepare_gedcom_lines","text":"lines character vector gedcom lines.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/prepare_gedcom_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare GEDCOM lines for export — prepare_gedcom_lines","text":"vector GEDCOM lines ready export.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/prop_definitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Define properties in GEDCOM 7.0 specification — prop_definitions","title":"Define properties in GEDCOM 7.0 specification — prop_definitions","text":"Define properties used S7 classes.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/prop_definitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define properties in GEDCOM 7.0 specification — prop_definitions","text":"full full address appear mailing label, lines separated semi-colon space. example: \"White House; 1600 Pennsylvania Avenue N.W.; Washington, DC 20500; United States America\" adr1, adr2, adr3 Deprecated. city city component address. state state component address. postal_code postal code component address. country country component address. text character string. New lines created \\n. language character string language tags defined BCP 47. languages character vector language tags defined BCP 47. media_type media type defined RFC 2045. translations TranslationText object list . One alternate translation text. title title multimedia record. supersede title given record. crop Whether crop multimedia specific area. top number pixels omit top side image. left number pixels omit left side image. height height pixels cropped region. width width pixels cropped region. specific location within information referenced. published work, include volume multi-volume work page number numbers. periodical, include volume, issue, page numbers. newspaper, include date, page number, column number. unpublished source micro‐ filmed works, film sheet number, page number, frame number. census record might enumerating district, page number, line number, dwelling number, family number. recommended data field formatted comma-separated label: value pairs source_text verbatim copy description contained within source. can either TranslationText object, list , character vector text. TranslationText objects provided, forced define associated language media type. fact_type TODO fact_phrase Textual information expressed fact type. role role person played fact. role_phrase Textual information expressed role. certainty enumerated value indicating credibility piece information, based supporting evidence. systems use feature rank multiple conflicting opinions display likely information first. intended eliminate receivers’ need evaluate evidence . \"0\" = unreliable/estimated data \"1\" = Questionable reliability evidence \"2\" = Secondary evidence, data officially recorded sometime event \"3\" = Direct primary evidence used, dominance evidence indi_phrase Textual information expressed @indi_xref. relation_is nature association. must value val_roles(). value \"\" used, @relation_phrase must given. relation_phrase Textual information expressed relation. place_name comma-separated string region names, ordered smallest largest. specific meaning element given @place_form, @default_place_form gedcom object @place_form defined. Elements left blank unknown, apply location, specific region question. example \"Baltimore, , Maryland, USA\". place_form comma-separated string jurisdictional titles, number elements @place_form. example \"City, County, State, Country\". place_translations named character vector translations place name. vector values must follow form @place_name vector names must language value defined @language. lat_long latitude longitude place, separated space. latitude coordinate direction North South equator degrees fraction degrees. longitude coordinate degrees fraction degrees East West zero base meridian coordinate. example: 18 degrees, 9 minutes, 3.4 seconds North, 168 degrees, 9 minutes, 3.4 seconds East formatted \"N18.150944 E168.150944\". fact_types character string indicating types events recorded particular source. event type separated comma space. example, parish register births, deaths, marriages BIRT, DEAT, MARR. territory territory associated events covered. can either Place object character string (comma-separated string region names, ordered smallest largest). character string provided region names can recorded (associated information). option easier associated information required. pedigree TODO pedigree_phrase TODO confidence TODO confidence_phrase TODO call_numbers Call number(s) used file retrieve items repository. can either SourceCallNumber object, list , character vector call numbers. character vector provided call numbers can recorded (associated medium). option easier associated information required. call_number call number. location TODO medium TODO medium_phrase TODO media_alt named vector media alternative media forms, c(form = location) prefix name prefix, e.g. Cmdr. given given name earned name. nickname descriptive familiar name used instead , addition , one’s proper name. surname_prefix Surname prefix article used family name. example name \"de la Cruz\", value \"de la\". surname Surname family name. suffix Name piece appears given name surname parts, e.g. Jr. name_pieces PersonalNamePieces object defining pieces full name. pers_name TODO name_type TODO type_phrase TODO name_translations TODO event_type TODO fact_val TODO fact_desc TODO place see territory address address given either Address object character string. written mailing label new lines separated \\n. phone_numbers character vector phone numbers. emails character vector email addresses. faxes character vector fax numbers. web_pages character vector web page URLs. agency organization, institution, corporation, person, entity responsibility associated fact. Examples employer person associated occupation, educational establishment awarded scholastic award. relig_affil religious denomination associated fact. cause Used special cases record reasons precipitated fact (e.g. cause death). confidential logical value indicating whether associated record/fact treated confidential. allows excluded export. locked logical value indicating whether associated record/fact treated read-. private logical value indicating whether associated record/fact treated private. allows excluded export. associations Associated individuals. can either Association object list . age, husb_age, wife_age character string indicates age years, months, weeks /days individual time fact. combination permitted. labels must come corresponding number, example; \"4y 8m 1w 3d\". Age bounds can also included, example; \"< 40y\". age fit format describe age corresponding phrase parameter. age_phrase, husb_age_phrase, wife_age_phrase Textual information expressed age. adop_parent TODO adop_parent_phrase TODO pers_names TODO sex sex individual. Either \"M\" (male), \"F\" (female), \"X\" (), \"U\" (undetermined, default), fam_links_chil TODO fam_links_spou TODO files MediaFile object list . refers 1 external digital files. Grouped files pertain context. repo_name name repository. facts_recorded facts recorded source. can either FactsRecorded object, list , character vector comma-delimited fact types. character vector provided fact types can recorded (associated information). option easier associated information required. example, parish register births, deaths, marriages \"BIRT, DEAT, MARR\". val_fact_types() function gives list possible fact types. originator person, agency, entity created record. published work, author, compiler, transcriber, abstractor, editor. unpublished source, may individual, government agency, church organization, private organization. full_title full title source. short_title shortened name source used sorting, filing, retrieving records. publication_facts record created. published works, includes information city publication, name publisher, year publication. repo_citations Associated repositories. can either RepositoryCitation object, list , character vector XREFs repository records. character vector provided XREFs can recorded (associated information). option easier associated information required. subm_name name submitter. product_id TODO product_name TODO product_version TODO business_name TODO business_address TODO data_name TODO data_pubdate TODO data_pubtime TODO data_copyright TODO gedcom_version TODO ext_tags TODO source TODO destination TODO gedcom_copyright TODO default_language TODO default_place_form TODO facts TODO non_events TODO spouse_sealings TODO ordinances TODO ord_type TODO temple_name TODO ord_state TODO xref cross-reference identifier record. edit maintenance done automatically. indi_xref cross-reference identifier individual record. individual record, can left blank value \"@VOID@\" used. However, define @indi_phrase. fam_xref cross-reference identifier family record. sour_xref cross-reference identifier source record. source record, can left blank value \"@VOID@\" used. However, describe source @. repo_xref cross-reference identifier repository record. repository record, can left blank value \"@VOID@\" used. However, describe repository @notes. media_xref cross-reference identifier multimedia record. note_xrefs character vector relevant note record cross-reference identifiers. data_note_xrefs character vector note record cross-reference identifiers relevant source data. subm_xref cross-reference identifier submitter record. subm_xrefs character vector relevant submitter record cross-reference identifiers. husb_xref, wife_xref, chil_xrefs cross-reference identifier(s) member's individual records. individual record, value \"@VOID@\" can used. However, need describe individual using named vector (description can used either case), e.g. c(\"Joe Bloggs\" = \"@VOID@\") c(\"Joe Bloggs\" = \"@I1@\") alia_xrefs named character vector relevant individual record cross-reference identifiers whose records also represent individual. vector names may provide description records. anci_xrefs, desi_xrefs character vector relevant submitter record cross-reference identifiers interested ancestors/descendants individual. unique_ids character vector enduring globally-unique identifiers. need formatted line RFC 4122 can generated uuid::UUIDgenerate(). user_ids character vector user-generated identifiers. type identifiers can given vector names, e.g. c(\"Driving license number\" = \"ABC123\") ext_ids named character vector identifiers maintained external authority. names must given URI. See GEDCOM specification information. media_links Associated multimedia. can either MediaLink object, list , character vector XREFs multimedia records. character vector provided XREFs can recorded (associated information). option easier associated information required. notes Associated notes. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. data_notes Associated notes source data. can either Note object, list , character vector notes. character vector provided notes can recorded (associated information). option easier associated information required. citations Associated sources. can either SourceCitation object, list , character vector XREFs source records. character vector provided XREFs can recorded (associated information). option easier associated information required. hour hour day given integer 0 23. minute minute hour given integer 0 59. second second minute given integer 0 59. fraction fraction second given integer. utc Whether time Coordinated Universal Time (UTC) (TRUE, default) local time (FALSE). year year given integer (greater 0). month month year given integer 1 12. day day month given integer 1 31. bce Whether date Common Era. FALSE default, TRUE, year given. Whether date near date given. calc Whether date calculated values. est Whether date near date given, calculated values. date_greg Gregorian date given either formatted GEDCOM string, DateGregorian object. date_exact exact date given either formatted GEDCOM string, DateExact object. given, default today's date. date_period date period given either formatted GEDCOM string, DatePeriod object. date date given either formatted GEDCOM string, DateValue object. date_sort date given either formatted GEDCOM string, DateSorting object. date_phrase Textual information expressed date. start_date start period/range given either formatted GEDCOM string, DateGregorian object. end_date end period/range given either formatted GEDCOM string, DateGregorian object. time time given either formatted GEDCOM string, Time object. created CreationDate object containing date record created. Creating object parameters sets date today. updated ChangeDate object containing date record updated. Creating object parameters sets date today. creation_date creation date file given either formatted GEDCOM string, DateExact object. creation_time creation time file given either formatted GEDCOM string, Time object. state_date ordinance date given either formatted GEDCOM string, DateExact object. state_time ordinance time given either formatted GEDCOM string, Time object. update_change_dates Whether automatically update change dates updating records. happens record pushed gedcom object. add_creation_dates Whether automatically add creation dates creating records. happens record pushed gedcom object. subm, indi, fam, sour, repo, media, note named list containing character vector representations GEDCOM records. edit parameters directly. xref_prefixes named vector containing alphanumeric string (6 characters long) precede number given identify new records (7 types). vector must particular length specific names. Default value: c(subm = \"U\", indi = \"\", fam = \"F\", sour = \"S\", repo = \"R\", media = \"M\", note = \"N\") order records appear vector also dictate order records appear exported file.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/prop_definitions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define properties in GEDCOM 7.0 specification — prop_definitions","text":"empty function serves single location properties defined, mainly efficiency maintainability.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/pull_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull a record from a GEDCOM object for editing — pull_record","title":"Pull a record from a GEDCOM object for editing — pull_record","text":"Pull record GEDCOM object editing","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/pull_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull a record from a GEDCOM object for editing — pull_record","text":"","code":"pull_record(x, xref)"},{"path":"https://jl5000.github.io/gedcomS7/reference/pull_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull a record from a GEDCOM object for editing — pull_record","text":"x gedcom object. xref xref record pull.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/pull_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull a record from a GEDCOM object for editing — pull_record","text":"S7 object representing record.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/pull_record.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pull a record from a GEDCOM object for editing — pull_record","text":"record removed gedcom object, rather copy taken.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/push_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Push an edited record back into a GEDCOM object — push_record","title":"Push an edited record back into a GEDCOM object — push_record","text":"Push edited record back GEDCOM object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/push_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push an edited record back into a GEDCOM object — push_record","text":"","code":"push_record(gedcom, record)"},{"path":"https://jl5000.github.io/gedcomS7/reference/push_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push an edited record back into a GEDCOM object — push_record","text":"gedcom object representing GEDCOM file. record object representing record place back GEDCOM object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/push_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Push an edited record back into a GEDCOM object — push_record","text":"updated GEDCOM object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/push_record.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Push an edited record back into a GEDCOM object — push_record","text":"function automatically keep family links individuals updated. also update record last_updated update_change_dates gedcom object set TRUE.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/read_gedcom.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a GEDCOM file — read_gedcom","title":"Import a GEDCOM file — read_gedcom","text":"Imports *.ged file creates gedcom object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/read_gedcom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a GEDCOM file — read_gedcom","text":"","code":"read_gedcom(filepath = file.choose())"},{"path":"https://jl5000.github.io/gedcomS7/reference/read_gedcom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a GEDCOM file — read_gedcom","text":"filepath full filepath GEDCOM file.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/read_gedcom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a GEDCOM file — read_gedcom","text":"gedcom S7 object.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a regular expression for DATE values — reg_date","title":"Construct a regular expression for DATE values — reg_date","text":"Construct regular expression DATE values","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a regular expression for DATE values — reg_date","text":"","code":"reg_date(flatten = TRUE, only = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a regular expression for DATE values — reg_date","text":"flatten logical value determines whether single regex string returned (flatten = TRUE) vector returned (flatten = FALSE). vector output used regexes need combined regexes. , anchored ^ $ separated | (). Whether allow strings date. FALSE, regular expression accepts patterns text can come date().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a regular expression for DATE values — reg_date","text":"Either single regex string vector ","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a regular expression for DATE values — reg_date","text":"DATE (subsequent DATE_CALENDAR) pattern can potentially handle several different calendar types, package implemented Gregorian calendar.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_approximated.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the regex pattern for DATE_APPROXIMATED values — reg_date_approximated","title":"Construct the regex pattern for DATE_APPROXIMATED values — reg_date_approximated","text":"Construct regex pattern DATE_APPROXIMATED values","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_approximated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the regex pattern for DATE_APPROXIMATED values — reg_date_approximated","text":"","code":"reg_date_approximated(flatten = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_approximated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the regex pattern for DATE_APPROXIMATED values — reg_date_approximated","text":"flatten logical value determines whether single regex string returned (flatten = TRUE) vector returned (flatten = FALSE). vector output used regexes need combined regexes. , anchored ^ $ separated | ().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_approximated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the regex pattern for DATE_APPROXIMATED values — reg_date_approximated","text":"Either single regex string vector ","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_exact.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a regular expression for DATE_EXACT values — reg_date_exact","title":"Construct a regular expression for DATE_EXACT values — reg_date_exact","text":"Construct regular expression DATE_EXACT values","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_exact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a regular expression for DATE_EXACT values — reg_date_exact","text":"","code":"reg_date_exact(only = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_exact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a regular expression for DATE_EXACT values — reg_date_exact","text":"Whether allow strings date_exact. FALSE, regular expression accepts patterns text can come date_exact().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_exact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a regular expression for DATE_EXACT values — reg_date_exact","text":"regex string","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the regex pattern for DATE_PERIOD values — reg_date_period","title":"Construct the regex pattern for DATE_PERIOD values — reg_date_period","text":"Construct regex pattern DATE_PERIOD values","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the regex pattern for DATE_PERIOD values — reg_date_period","text":"","code":"reg_date_period(flatten = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the regex pattern for DATE_PERIOD values — reg_date_period","text":"flatten logical value determines whether single regex string returned (flatten = TRUE) vector returned (flatten = FALSE). vector output used regexes need combined regexes. , anchored ^ $ separated | ().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_period.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the regex pattern for DATE_PERIOD values — reg_date_period","text":"Either single regex string vector ","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the regex pattern for DATE_RANGE values — reg_date_range","title":"Construct the regex pattern for DATE_RANGE values — reg_date_range","text":"Construct regex pattern DATE_RANGE values","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the regex pattern for DATE_RANGE values — reg_date_range","text":"","code":"reg_date_range(flatten = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the regex pattern for DATE_RANGE values — reg_date_range","text":"flatten logical value determines whether single regex string returned (flatten = TRUE) vector returned (flatten = FALSE). vector output used regexes need combined regexes. , anchored ^ $ separated | ().","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the regex pattern for DATE_RANGE values — reg_date_range","text":"Either single regex string vector ","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the regex pattern for DATE_VALUE values — reg_date_value","title":"Construct the regex pattern for DATE_VALUE values — reg_date_value","text":"Construct regex pattern DATE_VALUE values","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the regex pattern for DATE_VALUE values — reg_date_value","text":"","code":"reg_date_value()"},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_date_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the regex pattern for DATE_VALUE values — reg_date_value","text":"Either single regex string vector ","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_xref.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a regular expression for an xref — reg_xref","title":"Construct a regular expression for an xref — reg_xref","text":"Construct regular expression xref","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_xref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a regular expression for an xref — reg_xref","text":"","code":"reg_xref(only = TRUE)"},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_xref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a regular expression for an xref — reg_xref","text":"Whether allow strings xrefs. FALSE, regular expression accepts patterns text can come xref.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/reg_xref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a regular expression for an xref — reg_xref","text":"regular expression pattern xref.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/regex_combn.html","id":null,"dir":"Reference","previous_headings":"","what":"Enumerate all combinations of regex patterns — regex_combn","title":"Enumerate all combinations of regex patterns — regex_combn","text":"Enumerate combinations regex patterns","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/regex_combn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enumerate all combinations of regex patterns — regex_combn","text":"","code":"regex_combn(reg1, reg2)"},{"path":"https://jl5000.github.io/gedcomS7/reference/regex_combn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enumerate all combinations of regex patterns — regex_combn","text":"reg1 vector regex patterns. reg2 vector regex patterns.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/regex_combn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enumerate all combinations of regex patterns — regex_combn","text":"vector combinations concatenation reg1 reg2.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/remove_living.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove living individuals in a gedcom object — remove_living","title":"Remove living individuals in a gedcom object — remove_living","text":"Remove living individuals gedcom object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/remove_living.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove living individuals in a gedcom object — remove_living","text":"","code":"remove_living(x, max_age = 100)"},{"path":"https://jl5000.github.io/gedcomS7/reference/remove_living.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove living individuals in a gedcom object — remove_living","text":"x gedcom object. max_age maximum age assume living person (date birth given).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/remove_living.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove living individuals in a gedcom object — remove_living","text":"gedcom object cleansed information living individuals.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/remove_sensitive_sections.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove gedcom structures marked as sensitive — remove_sensitive_sections","title":"Remove gedcom structures marked as sensitive — remove_sensitive_sections","text":"Remove gedcom structures marked sensitive","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/remove_sensitive_sections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove gedcom structures marked as sensitive — remove_sensitive_sections","text":"","code":"remove_sensitive_sections(lines, restriction)"},{"path":"https://jl5000.github.io/gedcomS7/reference/remove_sensitive_sections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove gedcom structures marked as sensitive — remove_sensitive_sections","text":"lines character vector gedcom lines. restriction Whether remove structures marked \"CONFIDENTIAL\" \"PRIVACY\".","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/remove_sensitive_sections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove gedcom structures marked as sensitive — remove_sensitive_sections","text":"vector sanitised GEDCOM lines.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/rm_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove records from a GEDCOM object — rm_records","title":"Remove records from a GEDCOM object — rm_records","text":"Remove records GEDCOM object","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/rm_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove records from a GEDCOM object — rm_records","text":"","code":"rm_records(x, xrefs)"},{"path":"https://jl5000.github.io/gedcomS7/reference/rm_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove records from a GEDCOM object — rm_records","text":"x gedcom object. xrefs character vector xrefs remove.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/rm_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove records from a GEDCOM object — rm_records","text":"gedcom object records removed. Pointers record replaced void pointers.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/split_gedcom_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Create continuation lines — split_gedcom_values","title":"Create continuation lines — split_gedcom_values","text":"function introduces CONT lines line values contain line breaks.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/split_gedcom_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create continuation lines — split_gedcom_values","text":"","code":"split_gedcom_values(lines)"},{"path":"https://jl5000.github.io/gedcomS7/reference/split_gedcom_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create continuation lines — split_gedcom_values","text":"lines character vector gedcom lines.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/split_gedcom_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create continuation lines — split_gedcom_values","text":"new character vector gedcom lines, possibly expanded include CONT lines.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/write_gedcom.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a gedcom object to disk as a GEDCOM file — write_gedcom","title":"Save a gedcom object to disk as a GEDCOM file — write_gedcom","text":"Save gedcom object disk GEDCOM file","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/write_gedcom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a gedcom object to disk as a GEDCOM file — write_gedcom","text":"","code":"write_gedcom(   gedcom,   filepath = file.choose(),   inc_confid = TRUE,   inc_private = TRUE,   inc_living = TRUE )"},{"path":"https://jl5000.github.io/gedcomS7/reference/write_gedcom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a gedcom object to disk as a GEDCOM file — write_gedcom","text":"gedcom gedcom object. filepath full filepath write . inc_confid Whether include records marked confidential. inc_private Whether include records marked private. inc_living Whether include individual records suspected living people.","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/write_gedcom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a gedcom object to disk as a GEDCOM file — write_gedcom","text":"filepath (invisibly).","code":""},{"path":"https://jl5000.github.io/gedcomS7/reference/write_gedcom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save a gedcom object to disk as a GEDCOM file — write_gedcom","text":"function prepares gedcom object writes filepath. Steps taken include filtering sensitive data, escaping \"@\" signs (another \"@\") , splitting long lines onto separate lines.","code":""}]
