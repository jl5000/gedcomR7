% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cls_gedcom.R
\name{GedcomS7}
\alias{GedcomS7}
\title{Create a GEDCOM object}
\usage{
GedcomS7(
  header = GedcomHeader(),
  records = GedcomRecords(),
  update_change_dates = FALSE,
  add_creation_dates = FALSE
)
}
\arguments{
\item{header}{An S7 object whose properties contain information about the GEDCOM object as a whole.}

\item{records}{An S7 object whose properties contain information about all records. Do not edit
properties in capitals directly. See Details for more information.}

\item{update_change_dates}{Whether to automatically update change dates when updating records.
This happens when the record is pushed to the gedcom object.}

\item{add_creation_dates}{Whether to automatically add creation dates when creating records.
This happens when the record is pushed to the gedcom object.}
}
\value{
An S7 object representing a GEDCOM file.
}
\description{
You shouldn't need to use this directly to create new GEDCOM objects. Instead, use
\code{new_gedcom()} which populates relevant defaults.
}
\details{
All information about records is contained in the \verb{@records} property.

The \verb{@prefixes} property is a named vector containing any alphanumeric string (up to 6 characters long)
which will precede the number given to identify new records, of which there are currently 7 types:

Individual (INDI)
Family (FAM)
Source (SOUR)
Repository (REPO)
Multimedia (OBJE)
Note (SNOTE)
Submitter (SUBM)

This vector must be of a particular length with specific names. For example:
c(SUBM = "U", INDI = "I", FAM = "F", SOUR = "S", REPO = "R", OBJE = "M", SNOTE = "N").

The order that these records appear in the vector will also dictate the order in which records
will appear in the exported file.
}
